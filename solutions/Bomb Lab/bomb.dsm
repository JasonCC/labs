;; 
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2015 Retargetable Decompiler <info@retdec.com>
;; 
;; Total functions in disassembled code: 53
;; Decompiler release: v2.0 (Jun  1 2015)
;; Decompilation date: Sep 06 2015 19:32:30
;; Architecture: x86 (or later and compatible)
;; 


;; 
;; Code Segment
;; 

;  section: .init
;  function: _init at 0x80486e0 -- 0x80486e9
0x80486e0:   55                             	push ebp
0x80486e1:   89 e5                          	mov ebp, esp
0x80486e3:   53                             	push ebx
0x80486e4:   e8 00 00 00 00                 	call 0x80486e9  <function_80486e9>
;  function: function_80486e9 at 0x80486e9 -- 0x80488e0
0x80486e9:   5b                             	pop ebx
0x80486ea:   81 c3 2f 2e 00 00              	add ebx, 0x2e2f
0x80486f0:   83 bb 7c 00 00 00 00           	cmp dword [ ebx + 0x7c ], 0x0
0x80486f7:   74 05                          	jz  0x80486fe  <function_80486e9+0x15>
0x80486f9:   e8 02 79 fb f7                 	call 0x0
0x80486fe:   89 f6                          	mov esi, esi
0x8048700:   e8 6b 02 00 00                 	call 0x8048970  <frame_dummy>
0x8048705:   e8 a6 0e 00 00                 	call 0x80495b0  <__do_global_ctors_aux>
0x804870a:   8b 5d fc                       	mov ebx, dword [ ebp + 0xfffffffffffffffc ]
0x804870d:   c9                             	leave
0x804870e:   c3                             	ret
0x8048710:   ff 35 1c b5 04 08              	push dword [ 0x804b51c ]
0x8048716:   ff 25 20 b5 04 08              	jmp dword [ 0x804b520 ]
0x804871c:   00 00                          	add byte [ eax ], al
0x804871e:   00 00                          	add byte [ eax ], al
0x8048720:   ff 25 24 b5 04 08              	jmp dword [ 0x804b524 ]
0x8048726:   68 00 00 00 00                 	push 0x0
0x804872b:   e9 e0 ff ff ff                 	jmp 0xffffffffffffffe0
0x8048730:   ff 25 28 b5 04 08              	jmp dword [ 0x804b528 ]
0x8048736:   68 08 00 00 00                 	push 0x8
0x804873b:   e9 d0 ff ff ff                 	jmp 0xffffffffffffffd0
0x8048740:   ff 25 2c b5 04 08              	jmp dword [ 0x804b52c ]
0x8048746:   68 10 00 00 00                 	push 0x10
0x804874b:   e9 c0 ff ff ff                 	jmp 0xffffffffffffffc0
0x8048750:   ff 25 30 b5 04 08              	jmp dword [ 0x804b530 ]
0x8048756:   68 18 00 00 00                 	push 0x18
0x804875b:   e9 b0 ff ff ff                 	jmp 0xffffffffffffffb0
0x8048760:   ff 25 34 b5 04 08              	jmp dword [ 0x804b534 ]
0x8048766:   68 20 00 00 00                 	push 0x20
0x804876b:   e9 a0 ff ff ff                 	jmp 0xffffffffffffffa0
0x8048770:   ff 25 38 b5 04 08              	jmp dword [ 0x804b538 ]
0x8048776:   68 28 00 00 00                 	push 0x28
0x804877b:   e9 90 ff ff ff                 	jmp 0xffffffffffffff90
0x8048780:   ff 25 3c b5 04 08              	jmp dword [ 0x804b53c ]
0x8048786:   68 30 00 00 00                 	push 0x30
0x804878b:   e9 80 ff ff ff                 	jmp 0xffffffffffffff80
0x8048790:   ff 25 40 b5 04 08              	jmp dword [ 0x804b540 ]
0x8048796:   68 38 00 00 00                 	push 0x38
0x804879b:   e9 70 ff ff ff                 	jmp 0xffffffffffffff70
0x80487a0:   ff 25 44 b5 04 08              	jmp dword [ 0x804b544 ]
0x80487a6:   68 40 00 00 00                 	push 0x40
0x80487ab:   e9 60 ff ff ff                 	jmp 0xffffffffffffff60
0x80487b0:   ff 25 48 b5 04 08              	jmp dword [ 0x804b548 ]
0x80487b6:   68 48 00 00 00                 	push 0x48
0x80487bb:   e9 50 ff ff ff                 	jmp 0xffffffffffffff50
0x80487c0:   ff 25 4c b5 04 08              	jmp dword [ 0x804b54c ]
0x80487c6:   68 50 00 00 00                 	push 0x50
0x80487cb:   e9 40 ff ff ff                 	jmp 0xffffffffffffff40
0x80487d0:   ff 25 50 b5 04 08              	jmp dword [ 0x804b550 ]
0x80487d6:   68 58 00 00 00                 	push 0x58
0x80487db:   e9 30 ff ff ff                 	jmp 0xffffffffffffff30
0x80487e0:   ff 25 54 b5 04 08              	jmp dword [ 0x804b554 ]
0x80487e6:   68 60 00 00 00                 	push 0x60
0x80487eb:   e9 20 ff ff ff                 	jmp 0xffffffffffffff20
0x80487f0:   ff 25 58 b5 04 08              	jmp dword [ 0x804b558 ]
0x80487f6:   68 68 00 00 00                 	push 0x68
0x80487fb:   e9 10 ff ff ff                 	jmp 0xffffffffffffff10
0x8048800:   ff 25 5c b5 04 08              	jmp dword [ 0x804b55c ]
0x8048806:   68 70 00 00 00                 	push 0x70
0x804880b:   e9 00 ff ff ff                 	jmp 0xffffffffffffff00
0x8048810:   ff 25 60 b5 04 08              	jmp dword [ 0x804b560 ]
0x8048816:   68 78 00 00 00                 	push 0x78
0x804881b:   e9 f0 fe ff ff                 	jmp 0xfffffffffffffef0
0x8048820:   ff 25 64 b5 04 08              	jmp dword [ 0x804b564 ]
0x8048826:   68 80 00 00 00                 	push 0x80
0x804882b:   e9 e0 fe ff ff                 	jmp 0xfffffffffffffee0
0x8048830:   ff 25 68 b5 04 08              	jmp dword [ 0x804b568 ]
0x8048836:   68 88 00 00 00                 	push 0x88
0x804883b:   e9 d0 fe ff ff                 	jmp 0xfffffffffffffed0
0x8048840:   ff 25 6c b5 04 08              	jmp dword [ 0x804b56c ]
0x8048846:   68 90 00 00 00                 	push 0x90
0x804884b:   e9 c0 fe ff ff                 	jmp 0xfffffffffffffec0
0x8048850:   ff 25 70 b5 04 08              	jmp dword [ 0x804b570 ]
0x8048856:   68 98 00 00 00                 	push 0x98
0x804885b:   e9 b0 fe ff ff                 	jmp 0xfffffffffffffeb0
0x8048860:   ff 25 74 b5 04 08              	jmp dword [ 0x804b574 ]
0x8048866:   68 a0 00 00 00                 	push 0xa0
0x804886b:   e9 a0 fe ff ff                 	jmp 0xfffffffffffffea0
0x8048870:   ff 25 78 b5 04 08              	jmp dword [ 0x804b578 ]
0x8048876:   68 a8 00 00 00                 	push 0xa8
0x804887b:   e9 90 fe ff ff                 	jmp 0xfffffffffffffe90
0x8048880:   ff 25 7c b5 04 08              	jmp dword [ 0x804b57c ]
0x8048886:   68 b0 00 00 00                 	push 0xb0
0x804888b:   e9 80 fe ff ff                 	jmp 0xfffffffffffffe80
0x8048890:   ff 25 80 b5 04 08              	jmp dword [ 0x804b580 ]
0x8048896:   68 b8 00 00 00                 	push 0xb8
0x804889b:   e9 70 fe ff ff                 	jmp 0xfffffffffffffe70
0x80488a0:   ff 25 84 b5 04 08              	jmp dword [ 0x804b584 ]
0x80488a6:   68 c0 00 00 00                 	push 0xc0
0x80488ab:   e9 60 fe ff ff                 	jmp 0xfffffffffffffe60
0x80488b0:   ff 25 88 b5 04 08              	jmp dword [ 0x804b588 ]
0x80488b6:   68 c8 00 00 00                 	push 0xc8
0x80488bb:   e9 50 fe ff ff                 	jmp 0xfffffffffffffe50
0x80488c0:   ff 25 8c b5 04 08              	jmp dword [ 0x804b58c ]
0x80488c6:   68 d0 00 00 00                 	push 0xd0
0x80488cb:   e9 40 fe ff ff                 	jmp 0xfffffffffffffe40
0x80488d0:   ff 25 90 b5 04 08              	jmp dword [ 0x804b590 ]
0x80488d6:   68 d8 00 00 00                 	push 0xd8
0x80488db:   e9 30 fe ff ff                 	jmp 0xfffffffffffffe30
;  section: .plt
;  instructions unaffiliated with functions:
0x8048710:   ff 35 1c b5 04 08              	push dword [ 0x804b51c ]
0x8048716:   ff 25 20 b5 04 08              	jmp dword [ 0x804b520 ]
;  statically linked function: __register_frame_info at 0x804871c -- 0x804871c
;  data inside code section at 0x804871d -- 0x804871e
0x804871d:   00                                                 |.               |
;  statically linked function: __register_frame_info at 0x804871e -- 0x804871e
;  data inside code section at 0x804871f -- 0x8048720
0x804871f:   00                                                 |.               |
;  statically linked function: __register_frame_info at 0x8048720 -- 0x8048720
;  data inside code section at 0x8048721 -- 0x8048726
0x8048721:   25 24 b5 04 08                                     |%$...           |
;  instructions unaffiliated with functions:
0x8048726:   68 00 00 00 00                 	push 0x0
0x804872b:   e9 e0 ff ff ff                 	jmp 0xffffffffffffffe0
;  statically linked function: close at 0x8048730 -- 0x8048730
;  data inside code section at 0x8048731 -- 0x8048736
0x8048731:   25 28 b5 04 08                                     |%(...           |
;  instructions unaffiliated with functions:
0x8048736:   68 08 00 00 00                 	push 0x8
0x804873b:   e9 d0 ff ff ff                 	jmp 0xffffffffffffffd0
;  statically linked function: fprintf at 0x8048740 -- 0x8048740
;  data inside code section at 0x8048741 -- 0x8048746
0x8048741:   25 2c b5 04 08                                     |%,...           |
;  instructions unaffiliated with functions:
0x8048746:   68 10 00 00 00                 	push 0x10
0x804874b:   e9 c0 ff ff ff                 	jmp 0xffffffffffffffc0
;  statically linked function: tmpfile at 0x8048750 -- 0x8048750
;  data inside code section at 0x8048751 -- 0x8048756
0x8048751:   25 30 b5 04 08                                     |%0...           |
;  instructions unaffiliated with functions:
0x8048756:   68 18 00 00 00                 	push 0x18
0x804875b:   e9 b0 ff ff ff                 	jmp 0xffffffffffffffb0
;  statically linked function: getenv at 0x8048760 -- 0x8048760
;  data inside code section at 0x8048761 -- 0x8048766
0x8048761:   25 34 b5 04 08                                     |%4...           |
;  instructions unaffiliated with functions:
0x8048766:   68 20 00 00 00                 	push 0x20
0x804876b:   e9 a0 ff ff ff                 	jmp 0xffffffffffffffa0
;  statically linked function: signal at 0x8048770 -- 0x8048770
;  data inside code section at 0x8048771 -- 0x8048776
0x8048771:   25 38 b5 04 08                                     |%8...           |
;  instructions unaffiliated with functions:
0x8048776:   68 28 00 00 00                 	push 0x28
0x804877b:   e9 90 ff ff ff                 	jmp 0xffffffffffffff90
;  statically linked function: fflush at 0x8048780 -- 0x8048780
;  data inside code section at 0x8048781 -- 0x8048786
0x8048781:   25 3c b5 04 08                                     |%<...           |
;  instructions unaffiliated with functions:
0x8048786:   68 30 00 00 00                 	push 0x30
0x804878b:   e9 80 ff ff ff                 	jmp 0xffffffffffffff80
;  statically linked function: bcopy at 0x8048790 -- 0x8048790
;  data inside code section at 0x8048791 -- 0x8048796
0x8048791:   25 40 b5 04 08                                     |%@...           |
;  instructions unaffiliated with functions:
0x8048796:   68 38 00 00 00                 	push 0x38
0x804879b:   e9 70 ff ff ff                 	jmp 0xffffffffffffff70
;  statically linked function: rewind at 0x80487a0 -- 0x80487a0
;  data inside code section at 0x80487a1 -- 0x80487a6
0x80487a1:   25 44 b5 04 08                                     |%D...           |
;  instructions unaffiliated with functions:
0x80487a6:   68 40 00 00 00                 	push 0x40
0x80487ab:   e9 60 ff ff ff                 	jmp 0xffffffffffffff60
;  statically linked function: system at 0x80487b0 -- 0x80487b0
;  data inside code section at 0x80487b1 -- 0x80487b6
0x80487b1:   25 48 b5 04 08                                     |%H...           |
;  instructions unaffiliated with functions:
0x80487b6:   68 48 00 00 00                 	push 0x48
0x80487bb:   e9 50 ff ff ff                 	jmp 0xffffffffffffff50
;  statically linked function: __deregister_frame_info at 0x80487c0 -- 0x80487c0
;  data inside code section at 0x80487c1 -- 0x80487c6
0x80487c1:   25 4c b5 04 08                                     |%L...           |
;  instructions unaffiliated with functions:
0x80487c6:   68 50 00 00 00                 	push 0x50
0x80487cb:   e9 40 ff ff ff                 	jmp 0xffffffffffffff40
;  statically linked function: fgets at 0x80487d0 -- 0x80487d0
;  data inside code section at 0x80487d1 -- 0x80487d6
0x80487d1:   25 50 b5 04 08                                     |%P...           |
;  instructions unaffiliated with functions:
0x80487d6:   68 58 00 00 00                 	push 0x58
0x80487db:   e9 30 ff ff ff                 	jmp 0xffffffffffffff30
;  statically linked function: sleep at 0x80487e0 -- 0x80487e0
;  data inside code section at 0x80487e1 -- 0x80487e6
0x80487e1:   25 54 b5 04 08                                     |%T...           |
;  instructions unaffiliated with functions:
0x80487e6:   68 60 00 00 00                 	push 0x60
0x80487eb:   e9 20 ff ff ff                 	jmp 0xffffffffffffff20
;  statically linked function: __strtol_internal at 0x80487f0 -- 0x80487f0
;  data inside code section at 0x80487f1 -- 0x80487f6
0x80487f1:   25 58 b5 04 08                                     |%X...           |
;  instructions unaffiliated with functions:
0x80487f6:   68 68 00 00 00                 	push 0x68
0x80487fb:   e9 10 ff ff ff                 	jmp 0xffffffffffffff10
;  statically linked function: __libc_start_main at 0x8048800 -- 0x8048800
;  data inside code section at 0x8048801 -- 0x8048806
0x8048801:   25 5c b5 04 08                                     |%\...           |
;  instructions unaffiliated with functions:
0x8048806:   68 70 00 00 00                 	push 0x70
0x804880b:   e9 00 ff ff ff                 	jmp 0xffffffffffffff00
;  statically linked function: printf at 0x8048810 -- 0x8048810
;  data inside code section at 0x8048811 -- 0x8048816
0x8048811:   25 60 b5 04 08                                     |%`...           |
;  instructions unaffiliated with functions:
0x8048816:   68 78 00 00 00                 	push 0x78
0x804881b:   e9 f0 fe ff ff                 	jmp 0xfffffffffffffef0
;  statically linked function: fclose at 0x8048820 -- 0x8048820
;  data inside code section at 0x8048821 -- 0x8048826
0x8048821:   25 64 b5 04 08                                     |%d...           |
;  instructions unaffiliated with functions:
0x8048826:   68 80 00 00 00                 	push 0x80
0x804882b:   e9 e0 fe ff ff                 	jmp 0xfffffffffffffee0
;  statically linked function: gethostbyname at 0x8048830 -- 0x8048830
;  data inside code section at 0x8048831 -- 0x8048836
0x8048831:   25 68 b5 04 08                                     |%h...           |
;  instructions unaffiliated with functions:
0x8048836:   68 88 00 00 00                 	push 0x88
0x804883b:   e9 d0 fe ff ff                 	jmp 0xfffffffffffffed0
;  statically linked function: bzero at 0x8048840 -- 0x8048840
;  data inside code section at 0x8048841 -- 0x8048846
0x8048841:   25 6c b5 04 08                                     |%l...           |
;  instructions unaffiliated with functions:
0x8048846:   68 90 00 00 00                 	push 0x90
0x804884b:   e9 c0 fe ff ff                 	jmp 0xfffffffffffffec0
;  statically linked function: exit at 0x8048850 -- 0x8048850
;  data inside code section at 0x8048851 -- 0x8048856
0x8048851:   25 70 b5 04 08                                     |%p...           |
;  instructions unaffiliated with functions:
0x8048856:   68 98 00 00 00                 	push 0x98
0x804885b:   e9 b0 fe ff ff                 	jmp 0xfffffffffffffeb0
;  statically linked function: sscanf at 0x8048860 -- 0x8048860
;  data inside code section at 0x8048861 -- 0x8048866
0x8048861:   25 74 b5 04 08                                     |%t...           |
;  instructions unaffiliated with functions:
0x8048866:   68 a0 00 00 00                 	push 0xa0
0x804886b:   e9 a0 fe ff ff                 	jmp 0xfffffffffffffea0
;  statically linked function: connect at 0x8048870 -- 0x8048870
;  data inside code section at 0x8048871 -- 0x8048876
0x8048871:   25 78 b5 04 08                                     |%x...           |
;  instructions unaffiliated with functions:
0x8048876:   68 a8 00 00 00                 	push 0xa8
0x804887b:   e9 90 fe ff ff                 	jmp 0xfffffffffffffe90
;  statically linked function: fopen at 0x8048880 -- 0x8048880
;  data inside code section at 0x8048881 -- 0x8048886
0x8048881:   25 7c b5 04 08                                     |%|...           |
;  instructions unaffiliated with functions:
0x8048886:   68 b0 00 00 00                 	push 0xb0
0x804888b:   e9 80 fe ff ff                 	jmp 0xfffffffffffffe80
;  statically linked function: dup at 0x8048890 -- 0x8048890
;  data inside code section at 0x8048891 -- 0x8048896
0x8048891:   25 80 b5 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x8048896:   68 b8 00 00 00                 	push 0xb8
0x804889b:   e9 70 fe ff ff                 	jmp 0xfffffffffffffe70
;  statically linked function: sprintf at 0x80488a0 -- 0x80488a0
;  data inside code section at 0x80488a1 -- 0x80488a6
0x80488a1:   25 84 b5 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80488a6:   68 c0 00 00 00                 	push 0xc0
0x80488ab:   e9 60 fe ff ff                 	jmp 0xfffffffffffffe60
;  statically linked function: socket at 0x80488b0 -- 0x80488b0
;  data inside code section at 0x80488b1 -- 0x80488b6
0x80488b1:   25 88 b5 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80488b6:   68 c8 00 00 00                 	push 0xc8
0x80488bb:   e9 50 fe ff ff                 	jmp 0xfffffffffffffe50
;  statically linked function: cuserid at 0x80488c0 -- 0x80488c0
;  data inside code section at 0x80488c1 -- 0x80488c6
0x80488c1:   25 8c b5 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80488c6:   68 d0 00 00 00                 	push 0xd0
0x80488cb:   e9 40 fe ff ff                 	jmp 0xfffffffffffffe40
;  statically linked function: strcpy at 0x80488d0 -- 0x80488d0
;  data inside code section at 0x80488d1 -- 0x80488d6
0x80488d1:   25 90 b5 04 08                                     |%....           |
;  instructions unaffiliated with functions:
0x80488d6:   68 d8 00 00 00                 	push 0xd8
0x80488db:   e9 30 fe ff ff                 	jmp 0xfffffffffffffe30
;  section: .text
;  function: entry_point at 0x80488e0 -- 0x8048904
0x80488e0:   31 ed                          	xor ebp, ebp
0x80488e2:   5e                             	pop esi
0x80488e3:   89 e1                          	mov ecx, esp
0x80488e5:   83 e4 f8                       	and esp, 0xfffffffffffffff8
0x80488e8:   50                             	push eax
0x80488e9:   54                             	push esp
0x80488ea:   52                             	push edx
0x80488eb:   68 e4 95 04 08                 	push 0x80495e4 ;  Address of function: _fini
0x80488f0:   68 e0 86 04 08                 	push 0x80486e0 ;  Address of function: _init
0x80488f5:   51                             	push ecx
0x80488f6:   56                             	push esi
0x80488f7:   68 b0 89 04 08                 	push 0x80489b0 ;  Address of function: main
0x80488fc:   e8 ff fe ff ff                 	call 0x8048800  <__libc_start_main>
0x8048901:   f4                             	hlt
0x8048902:   90                             	nop
0x8048903:   90                             	nop
;  function: gcc2_compiled. at 0x8048904 -- 0x8048910
0x8048904:   90                             	nop
0x8048905:   90                             	nop
0x8048906:   90                             	nop
0x8048907:   90                             	nop
0x8048908:   90                             	nop
0x8048909:   90                             	nop
0x804890a:   90                             	nop
0x804890b:   90                             	nop
0x804890c:   90                             	nop
0x804890d:   90                             	nop
0x804890e:   90                             	nop
0x804890f:   90                             	nop
;  function: __do_global_dtors_aux at 0x8048910 -- 0x8048961
0x8048910:   55                             	push ebp
0x8048911:   89 e5                          	mov ebp, esp
0x8048913:   83 ec 08                       	sub esp, 0x8
0x8048916:   83 3d e8 ad 04 08 00           	cmp dword [ 0x804ade8 ], 0x0
0x804891d:   75 3e                          	jnz  0x804895d  <__do_global_dtors_aux+0x4d>
0x804891f:   eb 12                          	jmp 0x8048933  <__do_global_dtors_aux+0x23>
0x8048921:   a1 e4 ad 04 08                 	mov eax, dword [ 0x804ade4 ]
0x8048926:   8d 50 04                       	lea edx, dword [ eax + 0x4 ]
0x8048929:   89 15 e4 ad 04 08              	mov dword [ 0x804ade4 ], edx
0x804892f:   8b 00                          	mov eax, dword [ eax ]
0x8048931:   ff d0                          	call eax
0x8048933:   a1 e4 ad 04 08                 	mov eax, dword [ 0x804ade4 ]
0x8048938:   83 38 00                       	cmp dword [ eax ], 0x0
0x804893b:   75 e4                          	jnz  0x8048921  <__do_global_dtors_aux+0x11>
0x804893d:   b8 c0 87 04 08                 	mov eax, 0x80487c0
0x8048942:   85 c0                          	test eax, eax
0x8048944:   74 0d                          	jz  0x8048953  <__do_global_dtors_aux+0x43>
0x8048946:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048949:   68 84 b4 04 08                 	push 0x804b484
0x804894e:   e8 6d fe ff ff                 	call 0x80487c0  <__deregister_frame_info>
0x8048953:   c7 05 e8 ad 04 08 01 00 00 00  	mov dword [ 0x804ade8 ], 0x1
0x804895d:   89 ec                          	mov esp, ebp
0x804895f:   5d                             	pop ebp
0x8048960:   c3                             	ret
;  function: function_8048961 at 0x8048961 -- 0x8048964
0x8048961:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: fini_dummy at 0x8048964 -- 0x804896e
0x8048964:   55                             	push ebp
0x8048965:   89 e5                          	mov ebp, esp
0x8048967:   83 ec 08                       	sub esp, 0x8
0x804896a:   89 ec                          	mov esp, ebp
0x804896c:   5d                             	pop ebp
0x804896d:   c3                             	ret
;  function: function_804896e at 0x804896e -- 0x8048970
0x804896e:   89 f6                          	mov esi, esi
;  function: frame_dummy at 0x8048970 -- 0x8048995
0x8048970:   55                             	push ebp
0x8048971:   89 e5                          	mov ebp, esp
0x8048973:   83 ec 08                       	sub esp, 0x8
0x8048976:   b8 20 87 04 08                 	mov eax, 0x8048720
0x804897b:   85 c0                          	test eax, eax
0x804897d:   74 12                          	jz  0x8048991  <frame_dummy+0x21>
0x804897f:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048982:   68 4c b6 04 08                 	push 0x804b64c
0x8048987:   68 84 b4 04 08                 	push 0x804b484
0x804898c:   e8 8f fd ff ff                 	call 0x8048720  <__register_frame_info>
0x8048991:   89 ec                          	mov esp, ebp
0x8048993:   5d                             	pop ebp
0x8048994:   c3                             	ret
;  function: function_8048995 at 0x8048995 -- 0x8048998
0x8048995:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: init_dummy at 0x8048998 -- 0x80489b0
0x8048998:   55                             	push ebp
0x8048999:   89 e5                          	mov ebp, esp
0x804899b:   83 ec 08                       	sub esp, 0x8
0x804899e:   89 ec                          	mov esp, ebp
0x80489a0:   5d                             	pop ebp
0x80489a1:   c3                             	ret
0x80489a2:   90                             	nop
0x80489a3:   90                             	nop
0x80489a4:   90                             	nop
0x80489a5:   90                             	nop
0x80489a6:   90                             	nop
0x80489a7:   90                             	nop
0x80489a8:   90                             	nop
0x80489a9:   90                             	nop
0x80489aa:   90                             	nop
0x80489ab:   90                             	nop
0x80489ac:   90                             	nop
0x80489ad:   90                             	nop
0x80489ae:   90                             	nop
0x80489af:   90                             	nop
;  function: main at 0x80489b0 -- 0x8048b20
0x80489b0:   55                             	push ebp
0x80489b1:   89 e5                          	mov ebp, esp
0x80489b3:   83 ec 14                       	sub esp, 0x14
0x80489b6:   53                             	push ebx
0x80489b7:   8b 45 08                       	mov eax, dword [ ebp + 0x8 ]
0x80489ba:   8b 5d 0c                       	mov ebx, dword [ ebp + 0xc ]
0x80489bd:   83 f8 01                       	cmp eax, 0x1
0x80489c0:   75 0e                          	jnz  0x80489d0  <main+0x20>
0x80489c2:   a1 48 b6 04 08                 	mov eax, dword [ 0x804b648 ]
0x80489c7:   a3 64 b6 04 08                 	mov dword [ 0x804b664 ], eax
0x80489cc:   eb 62                          	jmp 0x8048a30  <main+0x80>
0x80489ce:   89 f6                          	mov esi, esi
0x80489d0:   83 f8 02                       	cmp eax, 0x2
0x80489d3:   75 3b                          	jnz  0x8048a10  <main+0x60>
0x80489d5:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x80489d8:   68 20 96 04 08                 	push 0x8049620 ;  "r\x00"
0x80489dd:   8b 43 04                       	mov eax, dword [ ebx + 0x4 ]
0x80489e0:   50                             	push eax
0x80489e1:   e8 9a fe ff ff                 	call 0x8048880  <fopen>
0x80489e6:   a3 64 b6 04 08                 	mov dword [ 0x804b664 ], eax
0x80489eb:   83 c4 10                       	add esp, 0x10
0x80489ee:   85 c0                          	test eax, eax
0x80489f0:   75 3e                          	jnz  0x8048a30  <main+0x80>
0x80489f2:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x80489f5:   8b 43 04                       	mov eax, dword [ ebx + 0x4 ]
0x80489f8:   50                             	push eax
0x80489f9:   8b 03                          	mov eax, dword [ ebx ]
0x80489fb:   50                             	push eax
0x80489fc:   68 22 96 04 08                 	push 0x8049622 ;  "%s: Error: Couldn't open %s\n\x00"
0x8048a01:   e8 0a fe ff ff                 	call 0x8048810  <printf>
0x8048a06:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a09:   6a 08                          	push 0x8
0x8048a0b:   e8 40 fe ff ff                 	call 0x8048850  <exit>
0x8048a10:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048a13:   8b 03                          	mov eax, dword [ ebx ]
0x8048a15:   50                             	push eax
0x8048a16:   68 3f 96 04 08                 	push 0x804963f ;  "Usage: %s [<input_file>]\n\x00"
0x8048a1b:   e8 f0 fd ff ff                 	call 0x8048810  <printf>
0x8048a20:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a23:   6a 08                          	push 0x8
0x8048a25:   e8 26 fe ff ff                 	call 0x8048850  <exit>
0x8048a2a:   8d b6 00 00 00 00              	lea esi, dword [ esi + 0x0 ]
0x8048a30:   e8 2b 07 00 00                 	call 0x8049160  <initialize_bomb>
0x8048a35:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a38:   68 60 96 04 08                 	push 0x8049660 ;  "Welcome to my fiendish little bomb. You have 6 phases with\n\x00"
0x8048a3d:   e8 ce fd ff ff                 	call 0x8048810  <printf>
0x8048a42:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a45:   68 a0 96 04 08                 	push 0x80496a0 ;  "which to blow yourself up. Have a nice day!\n\x00"
0x8048a4a:   e8 c1 fd ff ff                 	call 0x8048810  <printf>
0x8048a4f:   83 c4 20                       	add esp, 0x20
0x8048a52:   e8 a5 07 00 00                 	call 0x80491fc  <read_line>
0x8048a57:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a5a:   50                             	push eax
0x8048a5b:   e8 c0 00 00 00                 	call 0x8048b20  <phase_1>
0x8048a60:   e8 c7 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048a65:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a68:   68 e0 96 04 08                 	push 0x80496e0 ;  "Phase 1 defused. How about the next one?\n\x00"
0x8048a6d:   e8 9e fd ff ff                 	call 0x8048810  <printf>
0x8048a72:   83 c4 20                       	add esp, 0x20
0x8048a75:   e8 82 07 00 00                 	call 0x80491fc  <read_line>
0x8048a7a:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a7d:   50                             	push eax
0x8048a7e:   e8 c5 00 00 00                 	call 0x8048b48  <phase_2>
0x8048a83:   e8 a4 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048a88:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048a8b:   68 20 97 04 08                 	push 0x8049720 ;  "That's number 2.  Keep going!\n\x00"
0x8048a90:   e8 7b fd ff ff                 	call 0x8048810  <printf>
0x8048a95:   83 c4 20                       	add esp, 0x20
0x8048a98:   e8 5f 07 00 00                 	call 0x80491fc  <read_line>
0x8048a9d:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048aa0:   50                             	push eax
0x8048aa1:   e8 f2 00 00 00                 	call 0x8048b98  <phase_3>
0x8048aa6:   e8 81 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048aab:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048aae:   68 3f 97 04 08                 	push 0x804973f ;  "Halfway there!\n\x00"
0x8048ab3:   e8 58 fd ff ff                 	call 0x8048810  <printf>
0x8048ab8:   83 c4 20                       	add esp, 0x20
0x8048abb:   e8 3c 07 00 00                 	call 0x80491fc  <read_line>
0x8048ac0:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048ac3:   50                             	push eax
0x8048ac4:   e8 17 02 00 00                 	call 0x8048ce0  <phase_4>
0x8048ac9:   e8 5e 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048ace:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048ad1:   68 60 97 04 08                 	push 0x8049760 ;  "So you got that one.  Try this one.\n\x00"
0x8048ad6:   e8 35 fd ff ff                 	call 0x8048810  <printf>
0x8048adb:   83 c4 20                       	add esp, 0x20
0x8048ade:   e8 19 07 00 00                 	call 0x80491fc  <read_line>
0x8048ae3:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048ae6:   50                             	push eax
0x8048ae7:   e8 40 02 00 00                 	call 0x8048d2c  <phase_5>
0x8048aec:   e8 3b 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048af1:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048af4:   68 a0 97 04 08                 	push 0x80497a0 ;  "Good work!  On to the next...\n\x00"
0x8048af9:   e8 12 fd ff ff                 	call 0x8048810  <printf>
0x8048afe:   83 c4 20                       	add esp, 0x20
0x8048b01:   e8 f6 06 00 00                 	call 0x80491fc  <read_line>
0x8048b06:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048b09:   50                             	push eax
0x8048b0a:   e8 89 02 00 00                 	call 0x8048d98  <phase_6>
0x8048b0f:   e8 18 0a 00 00                 	call 0x804952c  <phase_defused>
0x8048b14:   31 c0                          	xor eax, eax
0x8048b16:   8b 5d e8                       	mov ebx, dword [ ebp + 0xffffffffffffffe8 ]
0x8048b19:   89 ec                          	mov esp, ebp
0x8048b1b:   5d                             	pop ebp
0x8048b1c:   c3                             	ret
0x8048b1d:   90                             	nop
0x8048b1e:   90                             	nop
0x8048b1f:   90                             	nop
;  function: phase_1 at 0x8048b20 -- 0x8048b48
0x8048b20:   55                             	push ebp
0x8048b21:   89 e5                          	mov ebp, esp
0x8048b23:   83 ec 08                       	sub esp, 0x8
0x8048b26:   8b 45 08                       	mov eax, dword [ ebp + 0x8 ]
0x8048b29:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048b2c:   68 c0 97 04 08                 	push 0x80497c0
0x8048b31:   50                             	push eax
0x8048b32:   e8 f9 04 00 00                 	call 0x8049030  <strings_not_equal>
0x8048b37:   83 c4 10                       	add esp, 0x10
0x8048b3a:   85 c0                          	test eax, eax
0x8048b3c:   74 05                          	jz  0x8048b43  <phase_1+0x23>
0x8048b3e:   e8 b9 09 00 00                 	call 0x80494fc  <explode_bomb>
0x8048b43:   89 ec                          	mov esp, ebp
0x8048b45:   5d                             	pop ebp
0x8048b46:   c3                             	ret
0x8048b47:   90                             	nop
;  function: phase_2 at 0x8048b48 -- 0x8048b98
0x8048b48:   55                             	push ebp
0x8048b49:   89 e5                          	mov ebp, esp
0x8048b4b:   83 ec 20                       	sub esp, 0x20
0x8048b4e:   56                             	push esi
0x8048b4f:   53                             	push ebx
0x8048b50:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8048b53:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048b56:   8d 45 e8                       	lea eax, dword [ ebp + 0xffffffffffffffe8 ]
0x8048b59:   50                             	push eax
0x8048b5a:   52                             	push edx
0x8048b5b:   e8 78 04 00 00                 	call 0x8048fd8  <read_six_numbers>
0x8048b60:   83 c4 10                       	add esp, 0x10
0x8048b63:   83 7d e8 01                    	cmp dword [ ebp + 0xffffffffffffffe8 ], 0x1
0x8048b67:   74 05                          	jz  0x8048b6e  <phase_2+0x26>
0x8048b69:   e8 8e 09 00 00                 	call 0x80494fc  <explode_bomb>
0x8048b6e:   bb 01 00 00 00                 	mov ebx, 0x1
0x8048b73:   8d 75 e8                       	lea esi, dword [ ebp + 0xffffffffffffffe8 ]
0x8048b76:   8d 43 01                       	lea eax, dword [ ebx + 0x1 ]
0x8048b79:   0f af 44 9e fc                 	imul eax, dword [ esi + ebx * 0xfffffffffffffffe + 0xfffffffffffffffc ]
0x8048b7e:   39 04 9e                       	cmp dword [ esi + ebx * 0x2 ], eax
0x8048b81:   74 05                          	jz  0x8048b88  <phase_2+0x40>
0x8048b83:   e8 74 09 00 00                 	call 0x80494fc  <explode_bomb>
0x8048b88:   43                             	inc ebx
0x8048b89:   83 fb 05                       	cmp ebx, 0x5
0x8048b8c:   7e e8                          	jle  0x8048b76  <phase_2+0x2e>
0x8048b8e:   8d 65 d8                       	lea esp, dword [ ebp + 0xffffffffffffffd8 ]
0x8048b91:   5b                             	pop ebx
0x8048b92:   5e                             	pop esi
0x8048b93:   89 ec                          	mov esp, ebp
0x8048b95:   5d                             	pop ebp
0x8048b96:   c3                             	ret
0x8048b97:   90                             	nop
;  function: phase_3 at 0x8048b98 -- 0x8048ca0
0x8048b98:   55                             	push ebp
0x8048b99:   89 e5                          	mov ebp, esp
0x8048b9b:   83 ec 14                       	sub esp, 0x14
0x8048b9e:   53                             	push ebx
0x8048b9f:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8048ba2:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048ba5:   8d 45 fc                       	lea eax, dword [ ebp + 0xfffffffffffffffc ]
0x8048ba8:   50                             	push eax
0x8048ba9:   8d 45 fb                       	lea eax, dword [ ebp + 0xfffffffffffffffb ]
0x8048bac:   50                             	push eax
0x8048bad:   8d 45 f4                       	lea eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048bb0:   50                             	push eax
0x8048bb1:   68 de 97 04 08                 	push 0x80497de ;  "%d %c %d\x00"
0x8048bb6:   52                             	push edx
0x8048bb7:   e8 a4 fc ff ff                 	call 0x8048860  <sscanf>
0x8048bbc:   83 c4 20                       	add esp, 0x20
0x8048bbf:   83 f8 02                       	cmp eax, 0x2
0x8048bc2:   7f 05                          	jg  0x8048bc9  <phase_3+0x31>
0x8048bc4:   e8 33 09 00 00                 	call 0x80494fc  <explode_bomb>
0x8048bc9:   83 7d f4 07                    	cmp dword [ ebp + 0xfffffffffffffff4 ], 0x7
0x8048bcd:   0f 87 b5 00 00 00              	ja  0x8048c88  <phase_3+0xf0>
0x8048bd3:   8b 45 f4                       	mov eax, dword [ ebp + 0xfffffffffffffff4 ]
0x8048bd6:   ff 24 85 e8 97 04 08           	jmp dword [ eax * 0x2 + 0x80497e8 ]
0x8048bdd:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
0x8048be0:   b3 71                          	mov bl, 0x71
0x8048be2:   81 7d fc 09 03 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0x309
0x8048be9:   0f 84 a0 00 00 00              	jz  0x8048c8f  <phase_3+0xf7>
0x8048bef:   e8 08 09 00 00                 	call 0x80494fc  <explode_bomb>
0x8048bf4:   e9 96 00 00 00                 	jmp 0x8048c8f  <phase_3+0xf7>
0x8048bf9:   8d b4 26 00 00 00 00           	lea esi, dword [ esi  + 0x0 ]
0x8048c00:   b3 62                          	mov bl, 0x62
0x8048c02:   81 7d fc d6 00 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0xd6
0x8048c09:   0f 84 80 00 00 00              	jz  0x8048c8f  <phase_3+0xf7>
0x8048c0f:   e8 e8 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c14:   eb 79                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c16:   b3 62                          	mov bl, 0x62
0x8048c18:   81 7d fc f3 02 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0x2f3
0x8048c1f:   74 6e                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c21:   e8 d6 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c26:   eb 67                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c28:   b3 6b                          	mov bl, 0x6b
0x8048c2a:   81 7d fc fb 00 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0xfb
0x8048c31:   74 5c                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c33:   e8 c4 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c38:   eb 55                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c3a:   8d b6 00 00 00 00              	lea esi, dword [ esi + 0x0 ]
0x8048c40:   b3 6f                          	mov bl, 0x6f
0x8048c42:   81 7d fc a0 00 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0xa0
0x8048c49:   74 44                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c4b:   e8 ac 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c50:   eb 3d                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c52:   b3 74                          	mov bl, 0x74
0x8048c54:   81 7d fc ca 01 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0x1ca
0x8048c5b:   74 32                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c5d:   e8 9a 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c62:   eb 2b                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c64:   b3 76                          	mov bl, 0x76
0x8048c66:   81 7d fc 0c 03 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0x30c
0x8048c6d:   74 20                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c6f:   e8 88 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c74:   eb 19                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c76:   b3 62                          	mov bl, 0x62
0x8048c78:   81 7d fc 0c 02 00 00           	cmp dword [ ebp + 0xfffffffffffffffc ], 0x20c
0x8048c7f:   74 0e                          	jz  0x8048c8f  <phase_3+0xf7>
0x8048c81:   e8 76 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c86:   eb 07                          	jmp 0x8048c8f  <phase_3+0xf7>
0x8048c88:   b3 78                          	mov bl, 0x78
0x8048c8a:   e8 6d 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c8f:   3a 5d fb                       	cmp bl, byte [ ebp + 0xfffffffffffffffb ]
0x8048c92:   74 05                          	jz  0x8048c99  <phase_3+0x101>
0x8048c94:   e8 63 08 00 00                 	call 0x80494fc  <explode_bomb>
0x8048c99:   8b 5d e8                       	mov ebx, dword [ ebp + 0xffffffffffffffe8 ]
0x8048c9c:   89 ec                          	mov esp, ebp
0x8048c9e:   5d                             	pop ebp
0x8048c9f:   c3                             	ret
;  function: func4 at 0x8048ca0 -- 0x8048cde
0x8048ca0:   55                             	push ebp
0x8048ca1:   89 e5                          	mov ebp, esp
0x8048ca3:   83 ec 10                       	sub esp, 0x10
0x8048ca6:   56                             	push esi
0x8048ca7:   53                             	push ebx
0x8048ca8:   8b 5d 08                       	mov ebx, dword [ ebp + 0x8 ]
0x8048cab:   83 fb 01                       	cmp ebx, 0x1
0x8048cae:   7e 20                          	jle  0x8048cd0  <func4+0x30>
0x8048cb0:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048cb3:   8d 43 ff                       	lea eax, dword [ ebx + 0xffffffffffffffff ]
0x8048cb6:   50                             	push eax
0x8048cb7:   e8 e4 ff ff ff                 	call 0x8048ca0  <func4>
0x8048cbc:   89 c6                          	mov esi, eax
0x8048cbe:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048cc1:   8d 43 fe                       	lea eax, dword [ ebx + 0xfffffffffffffffe ]
0x8048cc4:   50                             	push eax
0x8048cc5:   e8 d6 ff ff ff                 	call 0x8048ca0  <func4>
0x8048cca:   01 f0                          	add eax, esi
0x8048ccc:   eb 07                          	jmp 0x8048cd5  <func4+0x35>
0x8048cce:   89 f6                          	mov esi, esi
0x8048cd0:   b8 01 00 00 00                 	mov eax, 0x1
0x8048cd5:   8d 65 e8                       	lea esp, dword [ ebp + 0xffffffffffffffe8 ]
0x8048cd8:   5b                             	pop ebx
0x8048cd9:   5e                             	pop esi
0x8048cda:   89 ec                          	mov esp, ebp
0x8048cdc:   5d                             	pop ebp
0x8048cdd:   c3                             	ret
;  function: function_8048cde at 0x8048cde -- 0x8048ce0
0x8048cde:   89 f6                          	mov esi, esi
;  function: phase_4 at 0x8048ce0 -- 0x8048d2c
0x8048ce0:   55                             	push ebp
0x8048ce1:   89 e5                          	mov ebp, esp
0x8048ce3:   83 ec 18                       	sub esp, 0x18
0x8048ce6:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8048ce9:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x8048cec:   8d 45 fc                       	lea eax, dword [ ebp + 0xfffffffffffffffc ]
0x8048cef:   50                             	push eax
0x8048cf0:   68 08 98 04 08                 	push 0x8049808 ;  "%d\x00"
0x8048cf5:   52                             	push edx
0x8048cf6:   e8 65 fb ff ff                 	call 0x8048860  <sscanf>
0x8048cfb:   83 c4 10                       	add esp, 0x10
0x8048cfe:   83 f8 01                       	cmp eax, 0x1
0x8048d01:   75 06                          	jnz  0x8048d09  <phase_4+0x29>
0x8048d03:   83 7d fc 00                    	cmp dword [ ebp + 0xfffffffffffffffc ], 0x0
0x8048d07:   7f 05                          	jg  0x8048d0e  <phase_4+0x2e>
0x8048d09:   e8 ee 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048d0e:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048d11:   8b 45 fc                       	mov eax, dword [ ebp + 0xfffffffffffffffc ]
0x8048d14:   50                             	push eax
0x8048d15:   e8 86 ff ff ff                 	call 0x8048ca0  <func4>
0x8048d1a:   83 c4 10                       	add esp, 0x10
0x8048d1d:   83 f8 37                       	cmp eax, 0x37
0x8048d20:   74 05                          	jz  0x8048d27  <phase_4+0x47>
0x8048d22:   e8 d5 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048d27:   89 ec                          	mov esp, ebp
0x8048d29:   5d                             	pop ebp
0x8048d2a:   c3                             	ret
0x8048d2b:   90                             	nop
;  function: phase_5 at 0x8048d2c -- 0x8048d95
0x8048d2c:   55                             	push ebp
0x8048d2d:   89 e5                          	mov ebp, esp
0x8048d2f:   83 ec 10                       	sub esp, 0x10
0x8048d32:   56                             	push esi
0x8048d33:   53                             	push ebx
0x8048d34:   8b 5d 08                       	mov ebx, dword [ ebp + 0x8 ]
0x8048d37:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048d3a:   53                             	push ebx
0x8048d3b:   e8 d8 02 00 00                 	call 0x8049018  <string_length>
0x8048d40:   83 c4 10                       	add esp, 0x10
0x8048d43:   83 f8 06                       	cmp eax, 0x6
0x8048d46:   74 05                          	jz  0x8048d4d  <phase_5+0x21>
0x8048d48:   e8 af 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048d4d:   31 d2                          	xor edx, edx
0x8048d4f:   8d 4d f8                       	lea ecx, dword [ ebp + 0xfffffffffffffff8 ]
0x8048d52:   be 20 b2 04 08                 	mov esi, 0x804b220 ;  "isrveawhobpnutfg\xb0\x01\x00"
0x8048d57:   8a 04 1a                       	mov al, byte [ edx + ebx * 0x0 ]
0x8048d5a:   24 0f                          	and al, 0xf
0x8048d5c:   0f be c0                       	movsx eax, al
0x8048d5f:   8a 04 30                       	mov al, byte [ eax + esi * 0x0 ]
0x8048d62:   88 04 0a                       	mov byte [ edx + ecx * 0x0 ], al
0x8048d65:   42                             	inc edx
0x8048d66:   83 fa 05                       	cmp edx, 0x5
0x8048d69:   7e ec                          	jle  0x8048d57  <phase_5+0x2b>
0x8048d6b:   c6 45 fe 00                    	mov byte [ ebp + 0xfffffffffffffffe ], 0x0
0x8048d6f:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048d72:   68 0b 98 04 08                 	push 0x804980b
0x8048d77:   8d 45 f8                       	lea eax, dword [ ebp + 0xfffffffffffffff8 ]
0x8048d7a:   50                             	push eax
0x8048d7b:   e8 b0 02 00 00                 	call 0x8049030  <strings_not_equal>
0x8048d80:   83 c4 10                       	add esp, 0x10
0x8048d83:   85 c0                          	test eax, eax
0x8048d85:   74 05                          	jz  0x8048d8c  <phase_5+0x60>
0x8048d87:   e8 70 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048d8c:   8d 65 e8                       	lea esp, dword [ ebp + 0xffffffffffffffe8 ]
0x8048d8f:   5b                             	pop ebx
0x8048d90:   5e                             	pop esi
0x8048d91:   89 ec                          	mov esp, ebp
0x8048d93:   5d                             	pop ebp
0x8048d94:   c3                             	ret
;  function: function_8048d95 at 0x8048d95 -- 0x8048d98
0x8048d95:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: phase_6 at 0x8048d98 -- 0x8048e91
0x8048d98:   55                             	push ebp
0x8048d99:   89 e5                          	mov ebp, esp
0x8048d9b:   83 ec 4c                       	sub esp, 0x4c
0x8048d9e:   57                             	push edi
0x8048d9f:   56                             	push esi
0x8048da0:   53                             	push ebx
0x8048da1:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8048da4:   c7 45 cc 6c b2 04 08           	mov dword [ ebp + 0xffffffffffffffcc ], 0x804b26c
0x8048dab:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048dae:   8d 45 e8                       	lea eax, dword [ ebp + 0xffffffffffffffe8 ]
0x8048db1:   50                             	push eax
0x8048db2:   52                             	push edx
0x8048db3:   e8 20 02 00 00                 	call 0x8048fd8  <read_six_numbers>
0x8048db8:   31 ff                          	xor edi, edi
0x8048dba:   83 c4 10                       	add esp, 0x10
0x8048dbd:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
0x8048dc0:   8d 45 e8                       	lea eax, dword [ ebp + 0xffffffffffffffe8 ]
0x8048dc3:   8b 04 b8                       	mov eax, dword [ eax + edi * 0x2 ]
0x8048dc6:   48                             	dec eax
0x8048dc7:   83 f8 05                       	cmp eax, 0x5
0x8048dca:   76 05                          	jbe  0x8048dd1  <phase_6+0x39>
0x8048dcc:   e8 2b 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048dd1:   8d 5f 01                       	lea ebx, dword [ edi + 0x1 ]
0x8048dd4:   83 fb 05                       	cmp ebx, 0x5
0x8048dd7:   7f 23                          	jg  0x8048dfc  <phase_6+0x64>
0x8048dd9:   8d 04 bd 00 00 00 00           	lea eax, dword [ edi * 0x2 + 0x0 ]
0x8048de0:   89 45 c8                       	mov dword [ ebp + 0xffffffffffffffc8 ], eax
0x8048de3:   8d 75 e8                       	lea esi, dword [ ebp + 0xffffffffffffffe8 ]
0x8048de6:   8b 55 c8                       	mov edx, dword [ ebp + 0xffffffffffffffc8 ]
0x8048de9:   8b 04 32                       	mov eax, dword [ edx + esi * 0x0 ]
0x8048dec:   3b 04 9e                       	cmp eax, dword [ esi + ebx * 0x2 ]
0x8048def:   75 05                          	jnz  0x8048df6  <phase_6+0x5e>
0x8048df1:   e8 06 07 00 00                 	call 0x80494fc  <explode_bomb>
0x8048df6:   43                             	inc ebx
0x8048df7:   83 fb 05                       	cmp ebx, 0x5
0x8048dfa:   7e ea                          	jle  0x8048de6  <phase_6+0x4e>
0x8048dfc:   47                             	inc edi
0x8048dfd:   83 ff 05                       	cmp edi, 0x5
0x8048e00:   7e be                          	jle  0x8048dc0  <phase_6+0x28>
0x8048e02:   31 ff                          	xor edi, edi
0x8048e04:   8d 4d e8                       	lea ecx, dword [ ebp + 0xffffffffffffffe8 ]
0x8048e07:   8d 45 d0                       	lea eax, dword [ ebp + 0xffffffffffffffd0 ]
0x8048e0a:   89 45 c4                       	mov dword [ ebp + 0xffffffffffffffc4 ], eax
0x8048e0d:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
0x8048e10:   8b 75 cc                       	mov esi, dword [ ebp + 0xffffffffffffffcc ]
0x8048e13:   bb 01 00 00 00                 	mov ebx, 0x1
0x8048e18:   8d 04 bd 00 00 00 00           	lea eax, dword [ edi * 0x2 + 0x0 ]
0x8048e1f:   89 c2                          	mov edx, eax
0x8048e21:   3b 1c 08                       	cmp ebx, dword [ eax + ecx * 0x0 ]
0x8048e24:   7d 12                          	jge  0x8048e38  <phase_6+0xa0>
0x8048e26:   8b 04 0a                       	mov eax, dword [ edx + ecx * 0x0 ]
0x8048e29:   8d b4 26 00 00 00 00           	lea esi, dword [ esi  + 0x0 ]
0x8048e30:   8b 76 08                       	mov esi, dword [ esi + 0x8 ]
0x8048e33:   43                             	inc ebx
0x8048e34:   39 c3                          	cmp ebx, eax
0x8048e36:   7c f8                          	jl  0x8048e30  <phase_6+0x98>
0x8048e38:   8b 55 c4                       	mov edx, dword [ ebp + 0xffffffffffffffc4 ]
0x8048e3b:   89 34 ba                       	mov dword [ edx + edi * 0x2 ], esi
0x8048e3e:   47                             	inc edi
0x8048e3f:   83 ff 05                       	cmp edi, 0x5
0x8048e42:   7e cc                          	jle  0x8048e10  <phase_6+0x78>
0x8048e44:   8b 75 d0                       	mov esi, dword [ ebp + 0xffffffffffffffd0 ]
0x8048e47:   89 75 cc                       	mov dword [ ebp + 0xffffffffffffffcc ], esi
0x8048e4a:   bf 01 00 00 00                 	mov edi, 0x1
0x8048e4f:   8d 55 d0                       	lea edx, dword [ ebp + 0xffffffffffffffd0 ]
0x8048e52:   8b 04 ba                       	mov eax, dword [ edx + edi * 0x2 ]
0x8048e55:   89 46 08                       	mov dword [ esi + 0x8 ], eax
0x8048e58:   89 c6                          	mov esi, eax
0x8048e5a:   47                             	inc edi
0x8048e5b:   83 ff 05                       	cmp edi, 0x5
0x8048e5e:   7e f2                          	jle  0x8048e52  <phase_6+0xba>
0x8048e60:   c7 46 08 00 00 00 00           	mov dword [ esi + 0x8 ], 0x0
0x8048e67:   8b 75 cc                       	mov esi, dword [ ebp + 0xffffffffffffffcc ]
0x8048e6a:   31 ff                          	xor edi, edi
0x8048e6c:   8d 74 26 00                    	lea esi, dword [ esi  + 0x0 ]
0x8048e70:   8b 56 08                       	mov edx, dword [ esi + 0x8 ]
0x8048e73:   8b 06                          	mov eax, dword [ esi ]
0x8048e75:   3b 02                          	cmp eax, dword [ edx ]
0x8048e77:   7d 05                          	jge  0x8048e7e  <phase_6+0xe6>
0x8048e79:   e8 7e 06 00 00                 	call 0x80494fc  <explode_bomb>
0x8048e7e:   8b 76 08                       	mov esi, dword [ esi + 0x8 ]
0x8048e81:   47                             	inc edi
0x8048e82:   83 ff 04                       	cmp edi, 0x4
0x8048e85:   7e e9                          	jle  0x8048e70  <phase_6+0xd8>
0x8048e87:   8d 65 a8                       	lea esp, dword [ ebp + 0xffffffffffffffa8 ]
0x8048e8a:   5b                             	pop ebx
0x8048e8b:   5e                             	pop esi
0x8048e8c:   5f                             	pop edi
0x8048e8d:   89 ec                          	mov esp, ebp
0x8048e8f:   5d                             	pop ebp
0x8048e90:   c3                             	ret
;  function: function_8048e91 at 0x8048e91 -- 0x8048e94
0x8048e91:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: fun7 at 0x8048e94 -- 0x8048ee6
0x8048e94:   55                             	push ebp
0x8048e95:   89 e5                          	mov ebp, esp
0x8048e97:   83 ec 08                       	sub esp, 0x8
0x8048e9a:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8048e9d:   8b 45 0c                       	mov eax, dword [ ebp + 0xc ]
0x8048ea0:   85 d2                          	test edx, edx
0x8048ea2:   75 0c                          	jnz  0x8048eb0  <fun7+0x1c>
0x8048ea4:   b8 ff ff ff ff                 	mov eax, 0xffffffffffffffff
0x8048ea9:   eb 37                          	jmp 0x8048ee2  <fun7+0x4e>
0x8048eab:   90                             	nop
0x8048eac:   8d 74 26 00                    	lea esi, dword [ esi  + 0x0 ]
0x8048eb0:   3b 02                          	cmp eax, dword [ edx ]
0x8048eb2:   7d 11                          	jge  0x8048ec5  <fun7+0x31>
0x8048eb4:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048eb7:   50                             	push eax
0x8048eb8:   8b 42 04                       	mov eax, dword [ edx + 0x4 ]
0x8048ebb:   50                             	push eax
0x8048ebc:   e8 d3 ff ff ff                 	call 0x8048e94  <fun7>
0x8048ec1:   01 c0                          	add eax, eax
0x8048ec3:   eb 1d                          	jmp 0x8048ee2  <fun7+0x4e>
0x8048ec5:   3b 02                          	cmp eax, dword [ edx ]
0x8048ec7:   74 17                          	jz  0x8048ee0  <fun7+0x4c>
0x8048ec9:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048ecc:   50                             	push eax
0x8048ecd:   8b 42 08                       	mov eax, dword [ edx + 0x8 ]
0x8048ed0:   50                             	push eax
0x8048ed1:   e8 be ff ff ff                 	call 0x8048e94  <fun7>
0x8048ed6:   01 c0                          	add eax, eax
0x8048ed8:   40                             	inc eax
0x8048ed9:   eb 07                          	jmp 0x8048ee2  <fun7+0x4e>
0x8048edb:   90                             	nop
0x8048edc:   8d 74 26 00                    	lea esi, dword [ esi  + 0x0 ]
0x8048ee0:   31 c0                          	xor eax, eax
0x8048ee2:   89 ec                          	mov esp, ebp
0x8048ee4:   5d                             	pop ebp
0x8048ee5:   c3                             	ret
;  function: function_8048ee6 at 0x8048ee6 -- 0x8048ee8
0x8048ee6:   89 f6                          	mov esi, esi
;  function: secret_phase at 0x8048ee8 -- 0x8048f50
0x8048ee8:   55                             	push ebp
0x8048ee9:   89 e5                          	mov ebp, esp
0x8048eeb:   83 ec 14                       	sub esp, 0x14
0x8048eee:   53                             	push ebx
0x8048eef:   e8 08 03 00 00                 	call 0x80491fc  <read_line>
0x8048ef4:   6a 00                          	push 0x0
0x8048ef6:   6a 0a                          	push 0xa
0x8048ef8:   6a 00                          	push 0x0
0x8048efa:   50                             	push eax
0x8048efb:   e8 f0 f8 ff ff                 	call 0x80487f0  <__strtol_internal>
0x8048f00:   83 c4 10                       	add esp, 0x10
0x8048f03:   89 c3                          	mov ebx, eax
0x8048f05:   8d 43 ff                       	lea eax, dword [ ebx + 0xffffffffffffffff ]
0x8048f08:   3d e8 03 00 00                 	cmp eax, 0x3e8
0x8048f0d:   76 05                          	jbe  0x8048f14  <secret_phase+0x2c>
0x8048f0f:   e8 e8 05 00 00                 	call 0x80494fc  <explode_bomb>
0x8048f14:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048f17:   53                             	push ebx
0x8048f18:   68 20 b3 04 08                 	push 0x804b320
0x8048f1d:   e8 72 ff ff ff                 	call 0x8048e94  <fun7>
0x8048f22:   83 c4 10                       	add esp, 0x10
0x8048f25:   83 f8 07                       	cmp eax, 0x7
0x8048f28:   74 05                          	jz  0x8048f2f  <secret_phase+0x47>
0x8048f2a:   e8 cd 05 00 00                 	call 0x80494fc  <explode_bomb>
0x8048f2f:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f32:   68 20 98 04 08                 	push 0x8049820 ;  "Wow! You've defused the secret stage!\n\x00"
0x8048f37:   e8 d4 f8 ff ff                 	call 0x8048810  <printf>
0x8048f3c:   e8 eb 05 00 00                 	call 0x804952c  <phase_defused>
0x8048f41:   8b 5d e8                       	mov ebx, dword [ ebp + 0xffffffffffffffe8 ]
0x8048f44:   89 ec                          	mov esp, ebp
0x8048f46:   5d                             	pop ebp
0x8048f47:   c3                             	ret
0x8048f48:   90                             	nop
0x8048f49:   90                             	nop
0x8048f4a:   90                             	nop
0x8048f4b:   90                             	nop
0x8048f4c:   90                             	nop
0x8048f4d:   90                             	nop
0x8048f4e:   90                             	nop
0x8048f4f:   90                             	nop
;  function: sig_handler at 0x8048f50 -- 0x8048fb2
0x8048f50:   55                             	push ebp
0x8048f51:   89 e5                          	mov ebp, esp
0x8048f53:   83 ec 08                       	sub esp, 0x8
0x8048f56:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f59:   68 c0 9a 04 08                 	push 0x8049ac0 ;  "So you think you can stop the bomb with ctrl-c, do you?\n\x00"
0x8048f5e:   e8 ad f8 ff ff                 	call 0x8048810  <printf>
0x8048f63:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f66:   6a 03                          	push 0x3
0x8048f68:   e8 73 f8 ff ff                 	call 0x80487e0  <sleep>
0x8048f6d:   83 c4 20                       	add esp, 0x20
0x8048f70:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f73:   68 f9 9a 04 08                 	push 0x8049af9 ;  "Well...\x00"
0x8048f78:   e8 93 f8 ff ff                 	call 0x8048810  <printf>
0x8048f7d:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f80:   a1 40 b6 04 08                 	mov eax, dword [ 0x804b640 ]
0x8048f85:   50                             	push eax
0x8048f86:   e8 f5 f7 ff ff                 	call 0x8048780  <fflush>
0x8048f8b:   83 c4 20                       	add esp, 0x20
0x8048f8e:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f91:   6a 01                          	push 0x1
0x8048f93:   e8 48 f8 ff ff                 	call 0x80487e0  <sleep>
0x8048f98:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048f9b:   68 01 9b 04 08                 	push 0x8049b01 ;  "OK. :-)\n\x00"
0x8048fa0:   e8 6b f8 ff ff                 	call 0x8048810  <printf>
0x8048fa5:   83 c4 20                       	add esp, 0x20
0x8048fa8:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048fab:   6a 10                          	push 0x10
0x8048fad:   e8 9e f8 ff ff                 	call 0x8048850  <exit>
;  function: function_8048fb2 at 0x8048fb2 -- 0x8048fb4
0x8048fb2:   89 f6                          	mov esi, esi
;  function: invalid_phase at 0x8048fb4 -- 0x8048fd5
0x8048fb4:   55                             	push ebp
0x8048fb5:   89 e5                          	mov ebp, esp
0x8048fb7:   83 ec 08                       	sub esp, 0x8
0x8048fba:   8b 45 08                       	mov eax, dword [ ebp + 0x8 ]
0x8048fbd:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8048fc0:   50                             	push eax
0x8048fc1:   68 0a 9b 04 08                 	push 0x8049b0a ;  "Invalid phase%s\n\x00"
0x8048fc6:   e8 45 f8 ff ff                 	call 0x8048810  <printf>
0x8048fcb:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8048fce:   6a 08                          	push 0x8
0x8048fd0:   e8 7b f8 ff ff                 	call 0x8048850  <exit>
;  function: function_8048fd5 at 0x8048fd5 -- 0x8048fd8
0x8048fd5:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: read_six_numbers at 0x8048fd8 -- 0x8049015
0x8048fd8:   55                             	push ebp
0x8048fd9:   89 e5                          	mov ebp, esp
0x8048fdb:   83 ec 08                       	sub esp, 0x8
0x8048fde:   8b 4d 08                       	mov ecx, dword [ ebp + 0x8 ]
0x8048fe1:   8b 55 0c                       	mov edx, dword [ ebp + 0xc ]
0x8048fe4:   8d 42 14                       	lea eax, dword [ edx + 0x14 ]
0x8048fe7:   50                             	push eax
0x8048fe8:   8d 42 10                       	lea eax, dword [ edx + 0x10 ]
0x8048feb:   50                             	push eax
0x8048fec:   8d 42 0c                       	lea eax, dword [ edx + 0xc ]
0x8048fef:   50                             	push eax
0x8048ff0:   8d 42 08                       	lea eax, dword [ edx + 0x8 ]
0x8048ff3:   50                             	push eax
0x8048ff4:   8d 42 04                       	lea eax, dword [ edx + 0x4 ]
0x8048ff7:   50                             	push eax
0x8048ff8:   52                             	push edx
0x8048ff9:   68 1b 9b 04 08                 	push 0x8049b1b ;  "%d %d %d %d %d %d\x00"
0x8048ffe:   51                             	push ecx
0x8048fff:   e8 5c f8 ff ff                 	call 0x8048860  <sscanf>
0x8049004:   83 c4 20                       	add esp, 0x20
0x8049007:   83 f8 05                       	cmp eax, 0x5
0x804900a:   7f 05                          	jg  0x8049011  <read_six_numbers+0x39>
0x804900c:   e8 eb 04 00 00                 	call 0x80494fc  <explode_bomb>
0x8049011:   89 ec                          	mov esp, ebp
0x8049013:   5d                             	pop ebp
0x8049014:   c3                             	ret
;  function: function_8049015 at 0x8049015 -- 0x8049018
0x8049015:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: string_length at 0x8049018 -- 0x8049030
0x8049018:   55                             	push ebp
0x8049019:   89 e5                          	mov ebp, esp
0x804901b:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x804901e:   31 c0                          	xor eax, eax
0x8049020:   80 3a 00                       	cmp byte [ edx ], 0x0
0x8049023:   74 07                          	jz  0x804902c  <string_length+0x14>
0x8049025:   42                             	inc edx
0x8049026:   40                             	inc eax
0x8049027:   80 3a 00                       	cmp byte [ edx ], 0x0
0x804902a:   75 f9                          	jnz  0x8049025  <string_length+0xd>
0x804902c:   89 ec                          	mov esp, ebp
0x804902e:   5d                             	pop ebp
0x804902f:   c3                             	ret
;  function: strings_not_equal at 0x8049030 -- 0x8049089
0x8049030:   55                             	push ebp
0x8049031:   89 e5                          	mov ebp, esp
0x8049033:   83 ec 0c                       	sub esp, 0xc
0x8049036:   57                             	push edi
0x8049037:   56                             	push esi
0x8049038:   53                             	push ebx
0x8049039:   8b 75 08                       	mov esi, dword [ ebp + 0x8 ]
0x804903c:   8b 7d 0c                       	mov edi, dword [ ebp + 0xc ]
0x804903f:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049042:   56                             	push esi
0x8049043:   e8 d0 ff ff ff                 	call 0x8049018  <string_length>
0x8049048:   89 c3                          	mov ebx, eax
0x804904a:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804904d:   57                             	push edi
0x804904e:   e8 c5 ff ff ff                 	call 0x8049018  <string_length>
0x8049053:   39 c3                          	cmp ebx, eax
0x8049055:   74 09                          	jz  0x8049060  <strings_not_equal+0x30>
0x8049057:   b8 01 00 00 00                 	mov eax, 0x1
0x804905c:   eb 21                          	jmp 0x804907f  <strings_not_equal+0x4f>
0x804905e:   89 f6                          	mov esi, esi
0x8049060:   89 f2                          	mov edx, esi
0x8049062:   89 f9                          	mov ecx, edi
0x8049064:   80 3a 00                       	cmp byte [ edx ], 0x0
0x8049067:   74 14                          	jz  0x804907d  <strings_not_equal+0x4d>
0x8049069:   8d b4 26 00 00 00 00           	lea esi, dword [ esi  + 0x0 ]
0x8049070:   8a 02                          	mov al, byte [ edx ]
0x8049072:   3a 01                          	cmp al, byte [ ecx ]
0x8049074:   75 e1                          	jnz  0x8049057  <strings_not_equal+0x27>
0x8049076:   42                             	inc edx
0x8049077:   41                             	inc ecx
0x8049078:   80 3a 00                       	cmp byte [ edx ], 0x0
0x804907b:   75 f3                          	jnz  0x8049070  <strings_not_equal+0x40>
0x804907d:   31 c0                          	xor eax, eax
0x804907f:   8d 65 e8                       	lea esp, dword [ ebp + 0xffffffffffffffe8 ]
0x8049082:   5b                             	pop ebx
0x8049083:   5e                             	pop esi
0x8049084:   5f                             	pop edi
0x8049085:   89 ec                          	mov esp, ebp
0x8049087:   5d                             	pop ebp
0x8049088:   c3                             	ret
;  function: function_8049089 at 0x8049089 -- 0x804908c
0x8049089:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: open_clientfd at 0x804908c -- 0x8049160
0x804908c:   55                             	push ebp
0x804908d:   89 e5                          	mov ebp, esp
0x804908f:   83 ec 20                       	sub esp, 0x20
0x8049092:   56                             	push esi
0x8049093:   53                             	push ebx
0x8049094:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x8049097:   6a 00                          	push 0x0
0x8049099:   6a 01                          	push 0x1
0x804909b:   6a 02                          	push 0x2
0x804909d:   e8 0e f8 ff ff                 	call 0x80488b0  <socket>
0x80490a2:   89 c6                          	mov esi, eax
0x80490a4:   83 c4 10                       	add esp, 0x10
0x80490a7:   85 f6                          	test esi, esi
0x80490a9:   7d 17                          	jge  0x80490c2  <open_clientfd+0x36>
0x80490ab:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80490ae:   68 2d 9b 04 08                 	push 0x8049b2d ;  "Bad host (1).\n\x00"
0x80490b3:   e8 58 f7 ff ff                 	call 0x8048810  <printf>
0x80490b8:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80490bb:   6a 08                          	push 0x8
0x80490bd:   e8 8e f7 ff ff                 	call 0x8048850  <exit>
0x80490c2:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80490c5:   8b 45 08                       	mov eax, dword [ ebp + 0x8 ]
0x80490c8:   50                             	push eax
0x80490c9:   e8 62 f7 ff ff                 	call 0x8048830  <gethostbyname>
0x80490ce:   89 c3                          	mov ebx, eax
0x80490d0:   83 c4 10                       	add esp, 0x10
0x80490d3:   85 db                          	test ebx, ebx
0x80490d5:   75 19                          	jnz  0x80490f0  <open_clientfd+0x64>
0x80490d7:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80490da:   68 3c 9b 04 08                 	push 0x8049b3c ;  "Bad host (2).\n\x00"
0x80490df:   e8 2c f7 ff ff                 	call 0x8048810  <printf>
0x80490e4:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80490e7:   6a 08                          	push 0x8
0x80490e9:   e8 62 f7 ff ff                 	call 0x8048850  <exit>
0x80490ee:   89 f6                          	mov esi, esi
0x80490f0:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x80490f3:   6a 10                          	push 0x10
0x80490f5:   8d 45 f0                       	lea eax, dword [ ebp + 0xfffffffffffffff0 ]
0x80490f8:   50                             	push eax
0x80490f9:   e8 42 f7 ff ff                 	call 0x8048840  <bzero>
0x80490fe:   66 c7 45 f0 02 00              	mov word [ ebp + 0xfffffffffffffff0 ], 0x2
0x8049104:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x8049107:   8b 43 0c                       	mov eax, dword [ ebx + 0xc ]
0x804910a:   50                             	push eax
0x804910b:   8d 45 f4                       	lea eax, dword [ ebp + 0xfffffffffffffff4 ]
0x804910e:   50                             	push eax
0x804910f:   8b 43 10                       	mov eax, dword [ ebx + 0x10 ]
0x8049112:   8b 00                          	mov eax, dword [ eax ]
0x8049114:   50                             	push eax
0x8049115:   e8 76 f6 ff ff                 	call 0x8048790  <bcopy>
0x804911a:   83 c4 20                       	add esp, 0x20
0x804911d:   8b 45 0c                       	mov eax, dword [ ebp + 0xc ]
0x8049120:   66 c1 c8 08                    	ror ax, 0x8
0x8049124:   66 89 45 f2                    	mov word [ ebp + 0xfffffffffffffff2 ], ax
0x8049128:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x804912b:   6a 10                          	push 0x10
0x804912d:   8d 45 f0                       	lea eax, dword [ ebp + 0xfffffffffffffff0 ]
0x8049130:   50                             	push eax
0x8049131:   56                             	push esi
0x8049132:   e8 39 f7 ff ff                 	call 0x8048870  <connect>
0x8049137:   83 c4 10                       	add esp, 0x10
0x804913a:   85 c0                          	test eax, eax
0x804913c:   7d 17                          	jge  0x8049155  <open_clientfd+0xc9>
0x804913e:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049141:   68 4b 9b 04 08                 	push 0x8049b4b ;  "Bad host (3).\n\x00"
0x8049146:   e8 c5 f6 ff ff                 	call 0x8048810  <printf>
0x804914b:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804914e:   6a 08                          	push 0x8
0x8049150:   e8 fb f6 ff ff                 	call 0x8048850  <exit>
0x8049155:   89 f0                          	mov eax, esi
0x8049157:   8d 65 d8                       	lea esp, dword [ ebp + 0xffffffffffffffd8 ]
0x804915a:   5b                             	pop ebx
0x804915b:   5e                             	pop esi
0x804915c:   89 ec                          	mov esp, ebp
0x804915e:   5d                             	pop ebp
0x804915f:   c3                             	ret
;  function: initialize_bomb at 0x8049160 -- 0x8049179
0x8049160:   55                             	push ebp
0x8049161:   89 e5                          	mov ebp, esp
0x8049163:   83 ec 08                       	sub esp, 0x8
0x8049166:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8049169:   68 50 8f 04 08                 	push 0x8048f50 ;  Address of function: sig_handler
0x804916e:   6a 02                          	push 0x2
0x8049170:   e8 fb f5 ff ff                 	call 0x8048770  <signal>
0x8049175:   89 ec                          	mov esp, ebp
0x8049177:   5d                             	pop ebp
0x8049178:   c3                             	ret
;  function: function_8049179 at 0x8049179 -- 0x804917c
0x8049179:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: blank_line at 0x804917c -- 0x80491ae
0x804917c:   55                             	push ebp
0x804917d:   89 e5                          	mov ebp, esp
0x804917f:   8b 55 08                       	mov edx, dword [ ebp + 0x8 ]
0x8049182:   80 3a 00                       	cmp byte [ edx ], 0x0
0x8049185:   74 1e                          	jz  0x80491a5  <blank_line+0x29>
0x8049187:   8b 0d 44 b6 04 08              	mov ecx, dword [ 0x804b644 ]
0x804918d:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
0x8049190:   0f be 02                       	movsx eax, byte [ edx ]
0x8049193:   42                             	inc edx
0x8049194:   f6 44 41 01 20                 	test byte [ ecx + eax * 0x1 + 0x1 ], 0x20
0x8049199:   75 05                          	jnz  0x80491a0  <blank_line+0x24>
0x804919b:   31 c0                          	xor eax, eax
0x804919d:   eb 0b                          	jmp 0x80491aa  <blank_line+0x2e>
0x804919f:   90                             	nop
0x80491a0:   80 3a 00                       	cmp byte [ edx ], 0x0
0x80491a3:   75 eb                          	jnz  0x8049190  <blank_line+0x14>
0x80491a5:   b8 01 00 00 00                 	mov eax, 0x1
0x80491aa:   89 ec                          	mov esp, ebp
0x80491ac:   5d                             	pop ebp
0x80491ad:   c3                             	ret
;  function: function_80491ae at 0x80491ae -- 0x80491b0
0x80491ae:   89 f6                          	mov esi, esi
;  function: skip at 0x80491b0 -- 0x80491fa
0x80491b0:   55                             	push ebp
0x80491b1:   89 e5                          	mov ebp, esp
0x80491b3:   83 ec 14                       	sub esp, 0x14
0x80491b6:   53                             	push ebx
0x80491b7:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x80491ba:   a1 64 b6 04 08                 	mov eax, dword [ 0x804b664 ]
0x80491bf:   50                             	push eax
0x80491c0:   6a 50                          	push 0x50
0x80491c2:   a1 80 b4 04 08                 	mov eax, dword [ 0x804b480 ]
0x80491c7:   8d 04 80                       	lea eax, dword [ eax + eax * 0x2 ]
0x80491ca:   c1 e0 04                       	shl eax, 0x4
0x80491cd:   05 80 b6 04 08                 	add eax, 0x804b680
0x80491d2:   50                             	push eax
0x80491d3:   e8 f8 f5 ff ff                 	call 0x80487d0  <fgets>
0x80491d8:   89 c3                          	mov ebx, eax
0x80491da:   83 c4 10                       	add esp, 0x10
0x80491dd:   85 db                          	test ebx, ebx
0x80491df:   74 10                          	jz  0x80491f1  <skip+0x41>
0x80491e1:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80491e4:   53                             	push ebx
0x80491e5:   e8 92 ff ff ff                 	call 0x804917c  <blank_line>
0x80491ea:   83 c4 10                       	add esp, 0x10
0x80491ed:   85 c0                          	test eax, eax
0x80491ef:   75 c6                          	jnz  0x80491b7  <skip+0x7>
0x80491f1:   89 d8                          	mov eax, ebx
0x80491f3:   8b 5d e8                       	mov ebx, dword [ ebp + 0xffffffffffffffe8 ]
0x80491f6:   89 ec                          	mov esp, ebp
0x80491f8:   5d                             	pop ebp
0x80491f9:   c3                             	ret
;  function: function_80491fa at 0x80491fa -- 0x80491fc
0x80491fa:   89 f6                          	mov esi, esi
;  function: read_line at 0x80491fc -- 0x80492bd
0x80491fc:   55                             	push ebp
0x80491fd:   89 e5                          	mov ebp, esp
0x80491ff:   83 ec 14                       	sub esp, 0x14
0x8049202:   57                             	push edi
0x8049203:   e8 a8 ff ff ff                 	call 0x80491b0  <skip>
0x8049208:   85 c0                          	test eax, eax
0x804920a:   75 53                          	jnz  0x804925f  <read_line+0x63>
0x804920c:   a1 64 b6 04 08                 	mov eax, dword [ 0x804b664 ]
0x8049211:   3b 05 48 b6 04 08              	cmp eax, dword [ 0x804b648 ]
0x8049217:   74 31                          	jz  0x804924a  <read_line+0x4e>
0x8049219:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804921c:   68 7f 9b 04 08                 	push 0x8049b7f ;  "GRADE_BOMB\x00"
0x8049221:   e8 3a f5 ff ff                 	call 0x8048760  <getenv>
0x8049226:   83 c4 10                       	add esp, 0x10
0x8049229:   85 c0                          	test eax, eax
0x804922b:   74 0a                          	jz  0x8049237  <read_line+0x3b>
0x804922d:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049230:   6a 00                          	push 0x0
0x8049232:   e8 19 f6 ff ff                 	call 0x8048850  <exit>
0x8049237:   a1 48 b6 04 08                 	mov eax, dword [ 0x804b648 ]
0x804923c:   a3 64 b6 04 08                 	mov dword [ 0x804b664 ], eax
0x8049241:   e8 6a ff ff ff                 	call 0x80491b0  <skip>
0x8049246:   85 c0                          	test eax, eax
0x8049248:   75 15                          	jnz  0x804925f  <read_line+0x63>
0x804924a:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804924d:   68 60 9b 04 08                 	push 0x8049b60 ;  "Error: Premature EOF on stdin\n\x00"
0x8049252:   e8 b9 f5 ff ff                 	call 0x8048810  <printf>
0x8049257:   e8 a0 02 00 00                 	call 0x80494fc  <explode_bomb>
0x804925c:   83 c4 10                       	add esp, 0x10
0x804925f:   a1 80 b4 04 08                 	mov eax, dword [ 0x804b480 ]
0x8049264:   8d 04 80                       	lea eax, dword [ eax + eax * 0x2 ]
0x8049267:   c1 e0 04                       	shl eax, 0x4
0x804926a:   8d b8 80 b6 04 08              	lea edi, dword [ eax + 0x804b680 ]
0x8049270:   b0 00                          	mov al, 0x0
0x8049272:   fc                             	cld
0x8049273:   b9 ff ff ff ff                 	mov ecx, 0xffffffffffffffff
0x8049278:   f2 ae                          	repne scasb
0x804927a:   89 c8                          	mov eax, ecx
0x804927c:   f7 d0                          	not eax
0x804927e:   8d 78 ff                       	lea edi, dword [ eax + 0xffffffffffffffff ]
0x8049281:   83 ff 4f                       	cmp edi, 0x4f
0x8049284:   75 12                          	jnz  0x8049298  <read_line+0x9c>
0x8049286:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049289:   68 8a 9b 04 08                 	push 0x8049b8a ;  "Error: Input line too long\n\x00"
0x804928e:   e8 7d f5 ff ff                 	call 0x8048810  <printf>
0x8049293:   e8 64 02 00 00                 	call 0x80494fc  <explode_bomb>
0x8049298:   a1 80 b4 04 08                 	mov eax, dword [ 0x804b480 ]
0x804929d:   8d 04 80                       	lea eax, dword [ eax + eax * 0x2 ]
0x80492a0:   c1 e0 04                       	shl eax, 0x4
0x80492a3:   c6 84 07 7f b6 04 08 00        	mov byte [ edi + eax * 0x0 + 0x804b67f ], 0x0
0x80492ab:   05 80 b6 04 08                 	add eax, 0x804b680
0x80492b0:   ff 05 80 b4 04 08              	inc dword [ 0x804b480 ]
0x80492b6:   8b 7d e8                       	mov edi, dword [ ebp + 0xffffffffffffffe8 ]
0x80492b9:   89 ec                          	mov esp, ebp
0x80492bb:   5d                             	pop ebp
0x80492bc:   c3                             	ret
;  function: function_80492bd at 0x80492bd -- 0x80492c0
0x80492bd:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: send_msg at 0x80492c0 -- 0x80494fa
0x80492c0:   55                             	push ebp
0x80492c1:   89 e5                          	mov ebp, esp
0x80492c3:   83 ec 5c                       	sub esp, 0x5c
0x80492c6:   57                             	push edi
0x80492c7:   56                             	push esi
0x80492c8:   53                             	push ebx
0x80492c9:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80492cc:   6a 00                          	push 0x0
0x80492ce:   e8 bd f5 ff ff                 	call 0x8048890  <dup>
0x80492d3:   89 c7                          	mov edi, eax
0x80492d5:   83 c4 10                       	add esp, 0x10
0x80492d8:   83 ff ff                       	cmp edi, 0xffffffffffffffff
0x80492db:   75 17                          	jnz  0x80492f4  <send_msg+0x34>
0x80492dd:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80492e0:   68 a6 9b 04 08                 	push 0x8049ba6 ;  "ERROR: dup(0) error\n\x00"
0x80492e5:   e8 26 f5 ff ff                 	call 0x8048810  <printf>
0x80492ea:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80492ed:   6a 08                          	push 0x8
0x80492ef:   e8 5c f5 ff ff                 	call 0x8048850  <exit>
0x80492f4:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80492f7:   6a 00                          	push 0x0
0x80492f9:   e8 32 f4 ff ff                 	call 0x8048730  <close>
0x80492fe:   83 c4 10                       	add esp, 0x10
0x8049301:   83 f8 ff                       	cmp eax, 0xffffffffffffffff
0x8049304:   75 1a                          	jnz  0x8049320  <send_msg+0x60>
0x8049306:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049309:   68 bb 9b 04 08                 	push 0x8049bbb ;  "ERROR: close error\n\x00"
0x804930e:   e8 fd f4 ff ff                 	call 0x8048810  <printf>
0x8049313:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049316:   6a 08                          	push 0x8
0x8049318:   e8 33 f5 ff ff                 	call 0x8048850  <exit>
0x804931d:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
0x8049320:   e8 2b f4 ff ff                 	call 0x8048750  <tmpfile>
0x8049325:   89 c6                          	mov esi, eax
0x8049327:   85 f6                          	test esi, esi
0x8049329:   75 17                          	jnz  0x8049342  <send_msg+0x82>
0x804932b:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804932e:   68 cf 9b 04 08                 	push 0x8049bcf ;  "ERROR: tmpfile error\n\x00"
0x8049333:   e8 d8 f4 ff ff                 	call 0x8048810  <printf>
0x8049338:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804933b:   6a 08                          	push 0x8
0x804933d:   e8 0e f5 ff ff                 	call 0x8048850  <exit>
0x8049342:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8049345:   68 e5 9b 04 08                 	push 0x8049be5 ;  "Subject: Bomb notification\n\x00"
0x804934a:   56                             	push esi
0x804934b:   e8 f0 f3 ff ff                 	call 0x8048740  <fprintf>
0x8049350:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8049353:   68 01 9c 04 08                 	push 0x8049c01 ;  "\n\x00"
0x8049358:   56                             	push esi
0x8049359:   e8 e2 f3 ff ff                 	call 0x8048740  <fprintf>
0x804935e:   83 c4 20                       	add esp, 0x20
0x8049361:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049364:   6a 00                          	push 0x0
0x8049366:   e8 55 f5 ff ff                 	call 0x80488c0  <cuserid>
0x804936b:   83 c4 10                       	add esp, 0x10
0x804936e:   85 c0                          	test eax, eax
0x8049370:   75 1e                          	jnz  0x8049390  <send_msg+0xd0>
0x8049372:   8d 45 b0                       	lea eax, dword [ ebp + 0xffffffffffffffb0 ]
0x8049375:   c7 00 6e 6f 62 6f              	mov dword [ eax ], 0x6f626f6e
0x804937b:   83 c0 04                       	add eax, 0x4
0x804937e:   66 c7 00 64 79                 	mov word [ eax ], 0x7964
0x8049383:   c6 40 02 00                    	mov byte [ eax + 0x2 ], 0x0
0x8049387:   eb 17                          	jmp 0x80493a0  <send_msg+0xe0>
0x8049389:   8d b4 26 00 00 00 00           	lea esi, dword [ esi  + 0x0 ]
0x8049390:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x8049393:   50                             	push eax
0x8049394:   8d 45 b0                       	lea eax, dword [ ebp + 0xffffffffffffffb0 ]
0x8049397:   50                             	push eax
0x8049398:   e8 33 f5 ff ff                 	call 0x80488d0  <strcpy>
0x804939d:   83 c4 10                       	add esp, 0x10
0x80493a0:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x80493a3:   a1 80 b4 04 08                 	mov eax, dword [ 0x804b480 ]
0x80493a8:   50                             	push eax
0x80493a9:   b8 12 9c 04 08                 	mov eax, 0x8049c12 ;  "exploded\x00"
0x80493ae:   83 7d 08 00                    	cmp dword [ ebp + 0x8 ], 0x0
0x80493b2:   74 05                          	jz  0x80493b9  <send_msg+0xf9>
0x80493b4:   b8 0a 9c 04 08                 	mov eax, 0x8049c0a ;  "defused\x00"
0x80493b9:   50                             	push eax
0x80493ba:   8d 45 b0                       	lea eax, dword [ ebp + 0xffffffffffffffb0 ]
0x80493bd:   50                             	push eax
0x80493be:   a1 00 ae 04 08                 	mov eax, dword [ 0x804ae00 ]
0x80493c3:   50                             	push eax
0x80493c4:   68 20 ae 04 08                 	push 0x804ae20 ;  "generic\x00"
0x80493c9:   68 1b 9c 04 08                 	push 0x8049c1b ;  "bomb-header:%s:%d:%s:%s:%d\n\x00"
0x80493ce:   56                             	push esi
0x80493cf:   e8 6c f3 ff ff                 	call 0x8048740  <fprintf>
0x80493d4:   31 d2                          	xor edx, edx
0x80493d6:   83 c4 20                       	add esp, 0x20
0x80493d9:   3b 15 80 b4 04 08              	cmp edx, dword [ 0x804b480 ]
0x80493df:   7d 3a                          	jge  0x804941b  <send_msg+0x15b>
0x80493e1:   83 c4 fc                       	add esp, 0xfffffffffffffffc
0x80493e4:   8d 04 92                       	lea eax, dword [ edx + edx * 0x2 ]
0x80493e7:   c1 e0 04                       	shl eax, 0x4
0x80493ea:   05 80 b6 04 08                 	add eax, 0x804b680
0x80493ef:   50                             	push eax
0x80493f0:   8d 5a 01                       	lea ebx, dword [ edx + 0x1 ]
0x80493f3:   53                             	push ebx
0x80493f4:   8d 45 b0                       	lea eax, dword [ ebp + 0xffffffffffffffb0 ]
0x80493f7:   50                             	push eax
0x80493f8:   a1 00 ae 04 08                 	mov eax, dword [ 0x804ae00 ]
0x80493fd:   50                             	push eax
0x80493fe:   68 20 ae 04 08                 	push 0x804ae20 ;  "generic\x00"
0x8049403:   68 37 9c 04 08                 	push 0x8049c37 ;  "bomb-string:%s:%d:%s:%d:%s\n\x00"
0x8049408:   56                             	push esi
0x8049409:   e8 32 f3 ff ff                 	call 0x8048740  <fprintf>
0x804940e:   83 c4 20                       	add esp, 0x20
0x8049411:   89 da                          	mov edx, ebx
0x8049413:   3b 15 80 b4 04 08              	cmp edx, dword [ 0x804b480 ]
0x8049419:   7c c6                          	jl  0x80493e1  <send_msg+0x121>
0x804941b:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804941e:   56                             	push esi
0x804941f:   e8 7c f3 ff ff                 	call 0x80487a0  <rewind>
0x8049424:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049427:   68 81 9a 04 08                 	push 0x8049a81 ;  "bluegill.cmcl.cs.cmu.edu\x00"
0x804942c:   68 53 9c 04 08                 	push 0x8049c53 ;  "bomb\x00"
0x8049431:   68 58 9c 04 08                 	push 0x8049c58 ;  "/usr/sbin/sendmail -bm\x00"
0x8049436:   68 6f 9c 04 08                 	push 0x8049c6f ;  "%s %s@%s\x00"
0x804943b:   68 c0 bc 04 08                 	push 0x804bcc0
0x8049440:   e8 5b f4 ff ff                 	call 0x80488a0  <sprintf>
0x8049445:   83 c4 30                       	add esp, 0x30
0x8049448:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804944b:   68 c0 bc 04 08                 	push 0x804bcc0
0x8049450:   e8 5b f3 ff ff                 	call 0x80487b0  <system>
0x8049455:   83 c4 10                       	add esp, 0x10
0x8049458:   85 c0                          	test eax, eax
0x804945a:   74 17                          	jz  0x8049473  <send_msg+0x1b3>
0x804945c:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804945f:   68 78 9c 04 08                 	push 0x8049c78 ;  "ERROR: notification error\n\x00"
0x8049464:   e8 a7 f3 ff ff                 	call 0x8048810  <printf>
0x8049469:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x804946c:   6a 08                          	push 0x8
0x804946e:   e8 dd f3 ff ff                 	call 0x8048850  <exit>
0x8049473:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049476:   56                             	push esi
0x8049477:   e8 a4 f3 ff ff                 	call 0x8048820  <fclose>
0x804947c:   83 c4 10                       	add esp, 0x10
0x804947f:   85 c0                          	test eax, eax
0x8049481:   74 1d                          	jz  0x80494a0  <send_msg+0x1e0>
0x8049483:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049486:   68 93 9c 04 08                 	push 0x8049c93 ;  "ERROR: fclose(tmp) error\n\x00"
0x804948b:   e8 80 f3 ff ff                 	call 0x8048810  <printf>
0x8049490:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049493:   6a 08                          	push 0x8
0x8049495:   e8 b6 f3 ff ff                 	call 0x8048850  <exit>
0x804949a:   8d b6 00 00 00 00              	lea esi, dword [ esi + 0x0 ]
0x80494a0:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494a3:   57                             	push edi
0x80494a4:   e8 e7 f3 ff ff                 	call 0x8048890  <dup>
0x80494a9:   83 c4 10                       	add esp, 0x10
0x80494ac:   85 c0                          	test eax, eax
0x80494ae:   74 17                          	jz  0x80494c7  <send_msg+0x207>
0x80494b0:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494b3:   68 ad 9c 04 08                 	push 0x8049cad ;  "ERROR: dup(tmpstdin) error\n\x00"
0x80494b8:   e8 53 f3 ff ff                 	call 0x8048810  <printf>
0x80494bd:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494c0:   6a 08                          	push 0x8
0x80494c2:   e8 89 f3 ff ff                 	call 0x8048850  <exit>
0x80494c7:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494ca:   57                             	push edi
0x80494cb:   e8 60 f2 ff ff                 	call 0x8048730  <close>
0x80494d0:   83 c4 10                       	add esp, 0x10
0x80494d3:   85 c0                          	test eax, eax
0x80494d5:   74 19                          	jz  0x80494f0  <send_msg+0x230>
0x80494d7:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494da:   68 c9 9c 04 08                 	push 0x8049cc9 ;  "ERROR: close(tmpstdin)\n\x00"
0x80494df:   e8 2c f3 ff ff                 	call 0x8048810  <printf>
0x80494e4:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x80494e7:   6a 08                          	push 0x8
0x80494e9:   e8 62 f3 ff ff                 	call 0x8048850  <exit>
0x80494ee:   89 f6                          	mov esi, esi
0x80494f0:   8d 65 98                       	lea esp, dword [ ebp + 0xffffffffffffff98 ]
0x80494f3:   5b                             	pop ebx
0x80494f4:   5e                             	pop esi
0x80494f5:   5f                             	pop edi
0x80494f6:   89 ec                          	mov esp, ebp
0x80494f8:   5d                             	pop ebp
0x80494f9:   c3                             	ret
;  function: function_80494fa at 0x80494fa -- 0x80494fc
0x80494fa:   89 f6                          	mov esi, esi
;  function: explode_bomb at 0x80494fc -- 0x8049529
0x80494fc:   55                             	push ebp
0x80494fd:   89 e5                          	mov ebp, esp
0x80494ff:   83 ec 08                       	sub esp, 0x8
0x8049502:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049505:   68 e1 9c 04 08                 	push 0x8049ce1 ;  "\nBOOM!!!\n\x00"
0x804950a:   e8 01 f3 ff ff                 	call 0x8048810  <printf>
0x804950f:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049512:   68 eb 9c 04 08                 	push 0x8049ceb ;  "The bomb has blown up.\n\x00"
0x8049517:   e8 f4 f2 ff ff                 	call 0x8048810  <printf>
0x804951c:   83 c4 20                       	add esp, 0x20
0x804951f:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049522:   6a 08                          	push 0x8
0x8049524:   e8 27 f3 ff ff                 	call 0x8048850  <exit>
;  function: function_8049529 at 0x8049529 -- 0x804952c
0x8049529:   8d 76 00                       	lea esi, dword [ esi + 0x0 ]
;  function: phase_defused at 0x804952c -- 0x80495b0
0x804952c:   55                             	push ebp
0x804952d:   89 e5                          	mov ebp, esp
0x804952f:   83 ec 64                       	sub esp, 0x64
0x8049532:   53                             	push ebx
0x8049533:   83 3d 80 b4 04 08 06           	cmp dword [ 0x804b480 ], 0x6
0x804953a:   75 63                          	jnz  0x804959f  <phase_defused+0x73>
0x804953c:   8d 5d b0                       	lea ebx, dword [ ebp + 0xffffffffffffffb0 ]
0x804953f:   53                             	push ebx
0x8049540:   8d 45 ac                       	lea eax, dword [ ebp + 0xffffffffffffffac ]
0x8049543:   50                             	push eax
0x8049544:   68 03 9d 04 08                 	push 0x8049d03 ;  "%d %s\x00"
0x8049549:   68 70 b7 04 08                 	push 0x804b770
0x804954e:   e8 0d f3 ff ff                 	call 0x8048860  <sscanf>
0x8049553:   83 c4 10                       	add esp, 0x10
0x8049556:   83 f8 02                       	cmp eax, 0x2
0x8049559:   75 37                          	jnz  0x8049592  <phase_defused+0x66>
0x804955b:   83 c4 f8                       	add esp, 0xfffffffffffffff8
0x804955e:   68 09 9d 04 08                 	push 0x8049d09
0x8049563:   53                             	push ebx
0x8049564:   e8 c7 fa ff ff                 	call 0x8049030  <strings_not_equal>
0x8049569:   83 c4 10                       	add esp, 0x10
0x804956c:   85 c0                          	test eax, eax
0x804956e:   75 22                          	jnz  0x8049592  <phase_defused+0x66>
0x8049570:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049573:   68 20 9d 04 08                 	push 0x8049d20 ;  "Curses, you've found the secret phase!\n\x00"
0x8049578:   e8 93 f2 ff ff                 	call 0x8048810  <printf>
0x804957d:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049580:   68 60 9d 04 08                 	push 0x8049d60 ;  "But finding it and solving it are quite different...\n\x00"
0x8049585:   e8 86 f2 ff ff                 	call 0x8048810  <printf>
0x804958a:   83 c4 20                       	add esp, 0x20
0x804958d:   e8 56 f9 ff ff                 	call 0x8048ee8  <secret_phase>
0x8049592:   83 c4 f4                       	add esp, 0xfffffffffffffff4
0x8049595:   68 a0 9d 04 08                 	push 0x8049da0 ;  "Congratulations! You've defused the bomb!\n\x00"
0x804959a:   e8 71 f2 ff ff                 	call 0x8048810  <printf>
0x804959f:   8b 5d 98                       	mov ebx, dword [ ebp + 0xffffffffffffff98 ]
0x80495a2:   89 ec                          	mov esp, ebp
0x80495a4:   5d                             	pop ebp
0x80495a5:   c3                             	ret
0x80495a6:   90                             	nop
0x80495a7:   90                             	nop
0x80495a8:   90                             	nop
0x80495a9:   90                             	nop
0x80495aa:   90                             	nop
0x80495ab:   90                             	nop
0x80495ac:   90                             	nop
0x80495ad:   90                             	nop
0x80495ae:   90                             	nop
0x80495af:   90                             	nop
;  function: __do_global_ctors_aux at 0x80495b0 -- 0x80495d6
0x80495b0:   55                             	push ebp
0x80495b1:   89 e5                          	mov ebp, esp
0x80495b3:   83 ec 14                       	sub esp, 0x14
0x80495b6:   53                             	push ebx
0x80495b7:   bb 08 b5 04 08                 	mov ebx, 0x804b508
0x80495bc:   83 3d 08 b5 04 08 ff           	cmp dword [ 0x804b508 ], 0xffffffffffffffff
0x80495c3:   74 0c                          	jz  0x80495d1  <__do_global_ctors_aux+0x21>
0x80495c5:   8b 03                          	mov eax, dword [ ebx ]
0x80495c7:   ff d0                          	call eax
0x80495c9:   83 c3 fc                       	add ebx, 0xfffffffffffffffc
0x80495cc:   83 3b ff                       	cmp dword [ ebx ], 0xffffffffffffffff
0x80495cf:   75 f4                          	jnz  0x80495c5  <__do_global_ctors_aux+0x15>
0x80495d1:   5b                             	pop ebx
0x80495d2:   89 ec                          	mov esp, ebp
0x80495d4:   5d                             	pop ebp
0x80495d5:   c3                             	ret
;  function: function_80495d6 at 0x80495d6 -- 0x80495d8
0x80495d6:   89 f6                          	mov esi, esi
;  function: init_dummy_1 at 0x80495d8 -- 0x80495e4
0x80495d8:   55                             	push ebp
0x80495d9:   89 e5                          	mov ebp, esp
0x80495db:   83 ec 08                       	sub esp, 0x8
0x80495de:   89 ec                          	mov esp, ebp
0x80495e0:   5d                             	pop ebp
0x80495e1:   c3                             	ret
0x80495e2:   90                             	nop
0x80495e3:   90                             	nop
;  section: .fini
;  function: _fini at 0x80495e4 -- 0x80495ed
0x80495e4:   55                             	push ebp
0x80495e5:   89 e5                          	mov ebp, esp
0x80495e7:   53                             	push ebx
0x80495e8:   e8 00 00 00 00                 	call 0x80495ed  <function_80495ed>
;  function: function_80495ed at 0x80495ed -- 0x80495fe
0x80495ed:   5b                             	pop ebx
0x80495ee:   81 c3 2b 1f 00 00              	add ebx, 0x1f2b
0x80495f4:   e8 17 f3 ff ff                 	call 0x8048910  <__do_global_dtors_aux>
0x80495f9:   8b 5d fc                       	mov ebx, dword [ ebp + 0xfffffffffffffffc ]
0x80495fc:   c9                             	leave
0x80495fd:   c3                             	ret

;; 
;; Data Segment
;; 

;  section: .interp
0x80480f4:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048104:   2e 32 00                                           |.2.             |
;  section: .hash
0x8048128:   11 00 00 00 22 00 00 00  0e 00 00 00 00 00 00 00   |...."...........|
0x8048138:   1e 00 00 00 12 00 00 00  0f 00 00 00 00 00 00 00   |................|
0x8048148:   14 00 00 00 16 00 00 00  18 00 00 00 01 00 00 00   |................|
0x8048158:   1d 00 00 00 0c 00 00 00  21 00 00 00 1c 00 00 00   |........!.......|
0x8048168:   0d 00 00 00 20 00 00 00  17 00 00 00 00 00 00 00   |.... ...........|
0x8048178:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8048188:   00 00 00 00 05 00 00 00  00 00 00 00 04 00 00 00   |................|
0x8048198:   03 00 00 00 07 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481a8:   09 00 00 00 08 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481b8:   00 00 00 00 02 00 00 00  00 00 00 00 13 00 00 00   |................|
0x80481c8:   00 00 00 00 10 00 00 00  00 00 00 00 06 00 00 00   |................|
0x80481d8:   0b 00 00 00 11 00 00 00  1a 00 00 00 15 00 00 00   |................|
0x80481e8:   1b 00 00 00 19 00 00 00  0a 00 00 00 1f 00 00 00   |................|
0x80481f8:   00 00 00 00                                        |....            |
;  section: .dynsym
0x80481fc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804820c:   1f 01 00 00 20 87 04 08  74 00 00 00 22 00 00 00   |.... ...t..."...|
0x804821c:   35 01 00 00 30 87 04 08  37 00 00 00 12 00 00 00   |5...0...7.......|
0x804822c:   91 00 00 00 40 87 04 08  24 00 00 00 12 00 00 00   |....@...$.......|
0x804823c:   60 00 00 00 50 87 04 08  81 00 00 00 12 00 00 00   |`...P...........|
0x804824c:   41 00 00 00 60 87 04 08  e0 00 00 00 12 00 00 00   |A...`...........|
0x804825c:   b7 00 00 00 70 87 04 08  b5 00 00 00 12 00 00 00   |....p...........|
0x804826c:   7c 00 00 00 80 87 04 08  98 00 00 00 12 00 00 00   ||...............|
0x804827c:   be 00 00 00 90 87 04 08  7f 00 00 00 12 00 00 00   |................|
0x804828c:   ec 00 00 00 a0 87 04 08  73 00 00 00 12 00 00 00   |........s.......|
0x804829c:   68 00 00 00 b0 87 04 08  9e 02 00 00 12 00 00 00   |h...............|
0x80482ac:   99 00 00 00 c0 87 04 08  a2 00 00 00 22 00 00 00   |............"...|
0x80482bc:   28 00 00 00 40 b6 04 08  04 00 00 00 11 00 16 00   |(...@...........|
0x80482cc:   5a 00 00 00 d0 87 04 08  ca 00 00 00 12 00 00 00   |Z...............|
0x80482dc:   6f 00 00 00 e0 87 04 08  76 01 00 00 12 00 00 00   |o.......v.......|
0x80482ec:   48 00 00 00 f0 87 04 08  52 04 00 00 12 00 00 00   |H.......R.......|
0x80482fc:   0d 01 00 00 00 88 04 08  05 01 00 00 12 00 00 00   |................|
0x804830c:   21 00 00 00 10 88 04 08  29 00 00 00 12 00 00 00   |!.......).......|
0x804831c:   e5 00 00 00 20 88 04 08  f5 00 00 00 12 00 00 00   |.... ...........|
0x804832c:   cf 00 00 00 30 88 04 08  80 05 00 00 12 00 00 00   |....0...........|
0x804833c:   83 00 00 00 40 88 04 08  33 00 00 00 12 00 00 00   |....@...3.......|
0x804834c:   f3 00 00 00 50 88 04 08  e8 00 00 00 12 00 00 00   |....P...........|
0x804835c:   c4 00 00 00 60 88 04 08  24 00 00 00 12 00 00 00   |....`...$.......|
0x804836c:   37 00 00 00 44 b6 04 08  04 00 00 00 11 00 16 00   |7...D...........|
0x804837c:   2f 00 00 00 70 88 04 08  3a 00 00 00 12 00 00 00   |/...p...:.......|
0x804838c:   b1 00 00 00 48 b6 04 08  04 00 00 00 11 00 16 00   |....H...........|
0x804839c:   f8 00 00 00 80 88 04 08  79 00 00 00 12 00 00 00   |........y.......|
0x80483ac:   cb 00 00 00 90 88 04 08  37 00 00 00 12 00 00 00   |........7.......|
0x80483bc:   fe 00 00 00 04 96 04 08  04 00 00 00 11 00 0f 00   |................|
0x80483cc:   dd 00 00 00 a0 88 04 08  24 00 00 00 12 00 00 00   |........$.......|
0x80483dc:   75 00 00 00 b0 88 04 08  3a 00 00 00 12 00 00 00   |u.......:.......|
0x80483ec:   89 00 00 00 c0 88 04 08  7e 00 00 00 12 00 00 00   |........~.......|
0x80483fc:   01 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804840c:   1a 00 00 00 d0 88 04 08  22 00 00 00 12 00 00 00   |........".......|
;  section: .dynstr
0x804841c:   00 5f 5f 67 6d 6f 6e 5f  73 74 61 72 74 5f 5f 00   |.__gmon_start__.|
0x804842c:   6c 69 62 63 2e 73 6f 2e  36 00 73 74 72 63 70 79   |libc.so.6.strcpy|
0x804843c:   00 70 72 69 6e 74 66 00  73 74 64 6f 75 74 00 63   |.printf.stdout.c|
0x804844c:   6f 6e 6e 65 63 74 00 5f  5f 63 74 79 70 65 5f 62   |onnect.__ctype_b|
0x804845c:   00 67 65 74 65 6e 76 00  5f 5f 73 74 72 74 6f 6c   |.getenv.__strtol|
0x804846c:   5f 69 6e 74 65 72 6e 61  6c 00 66 67 65 74 73 00   |_internal.fgets.|
0x804847c:   74 6d 70 66 69 6c 65 00  73 79 73 74 65 6d 00 73   |tmpfile.system.s|
0x804848c:   6c 65 65 70 00 73 6f 63  6b 65 74 00 66 66 6c 75   |leep.socket.fflu|
0x804849c:   73 68 00 62 7a 65 72 6f  00 63 75 73 65 72 69 64   |sh.bzero.cuserid|
0x80484ac:   00 66 70 72 69 6e 74 66  00 5f 5f 64 65 72 65 67   |.fprintf.__dereg|
0x80484bc:   69 73 74 65 72 5f 66 72  61 6d 65 5f 69 6e 66 6f   |ister_frame_info|
0x80484cc:   00 73 74 64 69 6e 00 73  69 67 6e 61 6c 00 62 63   |.stdin.signal.bc|
0x80484dc:   6f 70 79 00 73 73 63 61  6e 66 00 64 75 70 00 67   |opy.sscanf.dup.g|
0x80484ec:   65 74 68 6f 73 74 62 79  6e 61 6d 65 00 73 70 72   |ethostbyname.spr|
0x80484fc:   69 6e 74 66 00 66 63 6c  6f 73 65 00 72 65 77 69   |intf.fclose.rewi|
0x804850c:   6e 64 00 65 78 69 74 00  66 6f 70 65 6e 00 5f 49   |nd.exit.fopen._I|
0x804851c:   4f 5f 73 74 64 69 6e 5f  75 73 65 64 00 5f 5f 6c   |O_stdin_used.__l|
0x804852c:   69 62 63 5f 73 74 61 72  74 5f 6d 61 69 6e 00 5f   |ibc_start_main._|
0x804853c:   5f 72 65 67 69 73 74 65  72 5f 66 72 61 6d 65 5f   |_register_frame_|
0x804854c:   69 6e 66 6f 00 63 6c 6f  73 65 00 47 4c 49 42 43   |info.close.GLIBC|
0x804855c:   5f 32 2e 31 00 47 4c 49  42 43 5f 32 2e 30 00      |_2.1.GLIBC_2.0. |
;  section: .gnu.version
0x804856c:   00 00 02 00 02 00 02 00  03 00 02 00 02 00 02 00   |................|
0x804857c:   02 00 02 00 02 00 02 00  02 00 02 00 02 00 02 00   |................|
0x804858c:   02 00 02 00 03 00 02 00  02 00 02 00 02 00 02 00   |................|
0x804859c:   02 00 02 00 03 00 02 00  01 00 02 00 02 00 02 00   |................|
0x80485ac:   00 00 02 00                                        |....            |
;  section: .gnu.version_r
0x80485b0:   01 00 02 00 10 00 00 00  10 00 00 00 00 00 00 00   |................|
0x80485c0:   11 69 69 0d 00 00 03 00  3b 01 00 00 10 00 00 00   |.ii.....;.......|
0x80485d0:   10 69 69 0d 00 00 02 00  45 01 00 00 00 00 00 00   |.ii.....E.......|
;  section: .rel.got
0x80485e0:   94 b5 04 08 06 20 00 00                            |..... ..        |
;  section: .rel.bss
0x80485e8:   40 b6 04 08 05 0c 00 00  44 b6 04 08 05 17 00 00   |@.......D.......|
0x80485f8:   48 b6 04 08 05 19 00 00                            |H.......        |
;  section: .rel.plt
0x8048600:   24 b5 04 08 07 01 00 00  28 b5 04 08 07 02 00 00   |$.......(.......|
0x8048610:   2c b5 04 08 07 03 00 00  30 b5 04 08 07 04 00 00   |,.......0.......|
0x8048620:   34 b5 04 08 07 05 00 00  38 b5 04 08 07 06 00 00   |4.......8.......|
0x8048630:   3c b5 04 08 07 07 00 00  40 b5 04 08 07 08 00 00   |<.......@.......|
0x8048640:   44 b5 04 08 07 09 00 00  48 b5 04 08 07 0a 00 00   |D.......H.......|
0x8048650:   4c b5 04 08 07 0b 00 00  50 b5 04 08 07 0d 00 00   |L.......P.......|
0x8048660:   54 b5 04 08 07 0e 00 00  58 b5 04 08 07 0f 00 00   |T.......X.......|
0x8048670:   5c b5 04 08 07 10 00 00  60 b5 04 08 07 11 00 00   |\.......`.......|
0x8048680:   64 b5 04 08 07 12 00 00  68 b5 04 08 07 13 00 00   |d.......h.......|
0x8048690:   6c b5 04 08 07 14 00 00  70 b5 04 08 07 15 00 00   |l.......p.......|
0x80486a0:   74 b5 04 08 07 16 00 00  78 b5 04 08 07 18 00 00   |t.......x.......|
0x80486b0:   7c b5 04 08 07 1a 00 00  80 b5 04 08 07 1b 00 00   ||...............|
0x80486c0:   84 b5 04 08 07 1d 00 00  88 b5 04 08 07 1e 00 00   |................|
0x80486d0:   8c b5 04 08 07 1f 00 00  90 b5 04 08 07 21 00 00   |.............!..|
;  section: .rodata
0x8049600:   03 00 00 00 01 00 02 00  00 00 00 00 00 00 00 00   |................|
0x8049610:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049620:   72 00                                              |r.              |  "r\x00"
0x8049622:   25 73 3a 20 45 72 72 6f  72 3a 20 43 6f 75 6c 64   |%s: Error: Could|  "%s: Error: Couldn't open %s\n\x00"
0x8049632:   6e 27 74 20 6f 70 65 6e  20 25 73 0a 00            |n't open %s..   |
0x804963f:   55 73 61 67 65 3a 20 25  73 20 5b 3c 69 6e 70 75   |Usage: %s [<inpu|  "Usage: %s [<input_file>]\n\x00"
0x804964f:   74 5f 66 69 6c 65 3e 5d  0a 00                     |t_file>]..      |
0x8049659:   00 00 00 00 00 00 00                               |.......         |
0x8049660:   57 65 6c 63 6f 6d 65 20  74 6f 20 6d 79 20 66 69   |Welcome to my fi|  "Welcome to my fiendish little bomb. You have 6 phases with\n\x00"
0x8049670:   65 6e 64 69 73 68 20 6c  69 74 74 6c 65 20 62 6f   |endish little bo|
0x8049680:   6d 62 2e 20 59 6f 75 20  68 61 76 65 20 36 20 70   |mb. You have 6 p|
0x8049690:   68 61 73 65 73 20 77 69  74 68 0a 00               |hases with..    |
0x804969c:   00 00 00 00                                        |....            |
0x80496a0:   77 68 69 63 68 20 74 6f  20 62 6c 6f 77 20 79 6f   |which to blow yo|  "which to blow yourself up. Have a nice day!\n\x00"
0x80496b0:   75 72 73 65 6c 66 20 75  70 2e 20 48 61 76 65 20   |urself up. Have |
0x80496c0:   61 20 6e 69 63 65 20 64  61 79 21 0a 00            |a nice day!..   |
0x80496cd:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80496dd:   00 00 00                                           |...             |
0x80496e0:   50 68 61 73 65 20 31 20  64 65 66 75 73 65 64 2e   |Phase 1 defused.|  "Phase 1 defused. How about the next one?\n\x00"
0x80496f0:   20 48 6f 77 20 61 62 6f  75 74 20 74 68 65 20 6e   | How about the n|
0x8049700:   65 78 74 20 6f 6e 65 3f  0a 00                     |ext one?..      |
0x804970a:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804971a:   00 00 00 00 00 00                                  |......          |
0x8049720:   54 68 61 74 27 73 20 6e  75 6d 62 65 72 20 32 2e   |That's number 2.|  "That's number 2.  Keep going!\n\x00"
0x8049730:   20 20 4b 65 65 70 20 67  6f 69 6e 67 21 0a 00      |  Keep going!.. |
0x804973f:   48 61 6c 66 77 61 79 20  74 68 65 72 65 21 0a 00   |Halfway there!..|  "Halfway there!\n\x00"
0x804974f:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804975f:   00                                                 |.               |
0x8049760:   53 6f 20 79 6f 75 20 67  6f 74 20 74 68 61 74 20   |So you got that |  "So you got that one.  Try this one.\n\x00"
0x8049770:   6f 6e 65 2e 20 20 54 72  79 20 74 68 69 73 20 6f   |one.  Try this o|
0x8049780:   6e 65 2e 0a 00                                     |ne...           |
0x8049785:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049795:   00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x80497a0:   47 6f 6f 64 20 77 6f 72  6b 21 20 20 4f 6e 20 74   |Good work!  On t|  "Good work!  On to the next...\n\x00"
0x80497b0:   6f 20 74 68 65 20 6e 65  78 74 2e 2e 2e 0a 00      |o the next..... |
0x80497bf:   00                                                 |.               |
0x80497c0:   50 75 62 6c 69 63 20 73  70 65 61 6b 69 6e 67 20   |Public speaking |
0x80497d0:   69 73 20 76 65 72 79 20  65 61 73 79 2e            |is very easy.   |
0x80497dd:   00                                                 |.               |
0x80497de:   25 64 20 25 63 20 25 64  00                        |%d %c %d.       |  "%d %c %d\x00"
0x80497e7:   00                                                 |.               |
0x80497e8:   e0 8b 04 08                                        |....            |
0x80497ec:   00 8c 04 08                                        |....            |
0x80497f0:   16 8c 04 08                                        |....            |
0x80497f4:   28 8c 04 08                                        |(...            |
0x80497f8:   40 8c 04 08                                        |@...            |
0x80497fc:   52 8c 04 08                                        |R...            |
0x8049800:   64 8c 04 08                                        |d...            |
0x8049804:   76 8c 04 08                                        |v...            |
0x8049808:   25 64 00                                           |%d.             |  "%d\x00"
0x804980b:   67 69 61 6e 74 73                                  |giants          |
0x8049811:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00      |............... |
0x8049820:   57 6f 77 21 20 59 6f 75  27 76 65 20 64 65 66 75   |Wow! You've defu|  "Wow! You've defused the secret stage!\n\x00"
0x8049830:   73 65 64 20 74 68 65 20  73 65 63 72 65 74 20 73   |sed the secret s|
0x8049840:   74 61 67 65 21 0a 00                               |tage!..         |
0x8049847:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049857:   00 00 00 00 00 00 00 00  00 77 68 69 74 65 66 69   |.........whitefi|
0x8049867:   73 68 2e 63 6d 63 6c 2e  63 73 2e 63 6d 75 2e 65   |sh.cmcl.cs.cmu.e|
0x8049877:   64 75 00 77 61 72 6d 6f  75 74 68 2e 63 6d 63 6c   |du.warmouth.cmcl|
0x8049887:   2e 63 73 2e 63 6d 75 2e  65 64 75 00 77 61 6c 6c   |.cs.cmu.edu.wall|
0x8049897:   65 79 65 2e 63 6d 63 6c  2e 63 73 2e 63 6d 75 2e   |eye.cmcl.cs.cmu.|
0x80498a7:   65 64 75 00 73 74 75 72  67 65 6f 6e 2e 63 6d 63   |edu.sturgeon.cmc|
0x80498b7:   6c 2e 63 73 2e 63 6d 75  2e 65 64 75 00 73 74 72   |l.cs.cmu.edu.str|
0x80498c7:   69 70 65 72 2e 63 6d 63  6c 2e 63 73 2e 63 6d 75   |iper.cmcl.cs.cmu|
0x80498d7:   2e 65 64 75 00 73 6f 63  6b 65 79 65 2e 63 6d 63   |.edu.sockeye.cmc|
0x80498e7:   6c 2e 63 73 2e 63 6d 75  2e 65 64 75 00 73 68 65   |l.cs.cmu.edu.she|
0x80498f7:   65 70 73 68 65 61 64 2e  63 6d 63 6c 2e 63 73 2e   |epshead.cmcl.cs.|
0x8049907:   63 6d 75 2e 65 64 75 00  73 68 61 64 2e 63 6d 63   |cmu.edu.shad.cmc|
0x8049917:   6c 2e 63 73 2e 63 6d 75  2e 65 64 75 00 73 61 75   |l.cs.cmu.edu.sau|
0x8049927:   67 65 72 2e 63 6d 63 6c  2e 63 73 2e 63 6d 75 2e   |ger.cmcl.cs.cmu.|
0x8049937:   65 64 75 00 73 61 6c 6d  6f 6e 2e 63 6d 63 6c 2e   |edu.salmon.cmcl.|
0x8049947:   63 73 2e 63 6d 75 2e 65  64 75 00 70 75 6d 70 6b   |cs.cmu.edu.pumpk|
0x8049957:   69 6e 73 65 65 64 2e 63  6d 63 6c 2e 63 73 2e 63   |inseed.cmcl.cs.c|
0x8049967:   6d 75 2e 65 64 75 00 70  69 6b 65 2e 63 6d 63 6c   |mu.edu.pike.cmcl|
0x8049977:   2e 63 73 2e 63 6d 75 2e  65 64 75 00 70 69 63 6b   |.cs.cmu.edu.pick|
0x8049987:   65 72 65 6c 2e 63 6d 63  6c 2e 63 73 2e 63 6d 75   |erel.cmcl.cs.cmu|
0x8049997:   2e 65 64 75 00 70 65 72  63 68 2e 63 6d 63 6c 2e   |.edu.perch.cmcl.|
0x80499a7:   63 73 2e 63 6d 75 2e 65  64 75 00 70 61 64 64 6c   |cs.cmu.edu.paddl|
0x80499b7:   65 66 69 73 68 2e 63 6d  63 6c 2e 63 73 2e 63 6d   |efish.cmcl.cs.cm|
0x80499c7:   75 2e 65 64 75 00 6d 75  73 6b 69 65 2e 63 6d 63   |u.edu.muskie.cmc|
0x80499d7:   6c 2e 63 73 2e 63 6d 75  2e 65 64 75 00 6d 69 6e   |l.cs.cmu.edu.min|
0x80499e7:   6e 6f 77 2e 63 6d 63 6c  2e 63 73 2e 63 6d 75 2e   |now.cmcl.cs.cmu.|
0x80499f7:   65 64 75 00 69 6e 63 6f  6e 6e 75 2e 63 6d 63 6c   |edu.inconnu.cmcl|
0x8049a07:   2e 63 73 2e 63 6d 75 2e  65 64 75 00 67 72 61 79   |.cs.cmu.edu.gray|
0x8049a17:   6c 69 6e 67 2e 63 6d 63  6c 2e 63 73 2e 63 6d 75   |ling.cmcl.cs.cmu|
0x8049a27:   2e 65 64 75 00 67 6f 62  69 2e 63 6d 63 6c 2e 63   |.edu.gobi.cmcl.c|
0x8049a37:   73 2e 63 6d 75 2e 65 64  75 00 66 6c 69 65 72 2e   |s.cmu.edu.flier.|
0x8049a47:   63 6d 63 6c 2e 63 73 2e  63 6d 75 2e 65 64 75 00   |cmcl.cs.cmu.edu.|
0x8049a57:   63 68 75 6d 2e 63 6d 63  6c 2e 63 73 2e 63 6d 75   |chum.cmcl.cs.cmu|
0x8049a67:   2e 65 64 75 00 63 68 61  72 2e 63 6d 63 6c 2e 63   |.edu.char.cmcl.c|
0x8049a77:   73 2e 63 6d 75 2e 65 64  75 00                     |s.cmu.edu.      |
0x8049a81:   62 6c 75 65 67 69 6c 6c  2e 63 6d 63 6c 2e 63 73   |bluegill.cmcl.cs|  "bluegill.cmcl.cs.cmu.edu\x00"
0x8049a91:   2e 63 6d 75 2e 65 64 75  00                        |.cmu.edu.       |
0x8049a9a:   62 61 73 73 2e 63 6d 63  6c 2e 63 73 2e 63 6d 75   |bass.cmcl.cs.cmu|
0x8049aaa:   2e 65 64 75 00 00 00 00  00 00 00 00 00 00 00 00   |.edu............|
0x8049aba:   00 00 00 00 00 00                                  |......          |
0x8049ac0:   53 6f 20 79 6f 75 20 74  68 69 6e 6b 20 79 6f 75   |So you think you|  "So you think you can stop the bomb with ctrl-c, do you?\n\x00"
0x8049ad0:   20 63 61 6e 20 73 74 6f  70 20 74 68 65 20 62 6f   | can stop the bo|
0x8049ae0:   6d 62 20 77 69 74 68 20  63 74 72 6c 2d 63 2c 20   |mb with ctrl-c, |
0x8049af0:   64 6f 20 79 6f 75 3f 0a  00                        |do you?..       |
0x8049af9:   57 65 6c 6c 2e 2e 2e 00                            |Well....        |  "Well...\x00"
0x8049b01:   4f 4b 2e 20 3a 2d 29 0a  00                        |OK. :-)..       |  "OK. :-)\n\x00"
0x8049b0a:   49 6e 76 61 6c 69 64 20  70 68 61 73 65 25 73 0a   |Invalid phase%s.|  "Invalid phase%s\n\x00"
0x8049b1a:   00                                                 |.               |
0x8049b1b:   25 64 20 25 64 20 25 64  20 25 64 20 25 64 20 25   |%d %d %d %d %d %|  "%d %d %d %d %d %d\x00"
0x8049b2b:   64 00                                              |d.              |
0x8049b2d:   42 61 64 20 68 6f 73 74  20 28 31 29 2e 0a 00      |Bad host (1)... |  "Bad host (1).\n\x00"
0x8049b3c:   42 61 64 20 68 6f 73 74  20 28 32 29 2e 0a 00      |Bad host (2)... |  "Bad host (2).\n\x00"
0x8049b4b:   42 61 64 20 68 6f 73 74  20 28 33 29 2e 0a 00      |Bad host (3)... |  "Bad host (3).\n\x00"
0x8049b5a:   00 00 00 00 00 00                                  |......          |
0x8049b60:   45 72 72 6f 72 3a 20 50  72 65 6d 61 74 75 72 65   |Error: Premature|  "Error: Premature EOF on stdin\n\x00"
0x8049b70:   20 45 4f 46 20 6f 6e 20  73 74 64 69 6e 0a 00      | EOF on stdin.. |
0x8049b7f:   47 52 41 44 45 5f 42 4f  4d 42 00                  |GRADE_BOMB.     |  "GRADE_BOMB\x00"
0x8049b8a:   45 72 72 6f 72 3a 20 49  6e 70 75 74 20 6c 69 6e   |Error: Input lin|  "Error: Input line too long\n\x00"
0x8049b9a:   65 20 74 6f 6f 20 6c 6f  6e 67 0a 00               |e too long..    |
0x8049ba6:   45 52 52 4f 52 3a 20 64  75 70 28 30 29 20 65 72   |ERROR: dup(0) er|  "ERROR: dup(0) error\n\x00"
0x8049bb6:   72 6f 72 0a 00                                     |ror..           |
0x8049bbb:   45 52 52 4f 52 3a 20 63  6c 6f 73 65 20 65 72 72   |ERROR: close err|  "ERROR: close error\n\x00"
0x8049bcb:   6f 72 0a 00                                        |or..            |
0x8049bcf:   45 52 52 4f 52 3a 20 74  6d 70 66 69 6c 65 20 65   |ERROR: tmpfile e|  "ERROR: tmpfile error\n\x00"
0x8049bdf:   72 72 6f 72 0a 00                                  |rror..          |
0x8049be5:   53 75 62 6a 65 63 74 3a  20 42 6f 6d 62 20 6e 6f   |Subject: Bomb no|  "Subject: Bomb notification\n\x00"
0x8049bf5:   74 69 66 69 63 61 74 69  6f 6e 0a 00               |tification..    |
0x8049c01:   0a 00                                              |..              |  "\n\x00"
0x8049c03:   6e 6f 62 6f 64 79 00                               |nobody.         |
0x8049c0a:   64 65 66 75 73 65 64 00                            |defused.        |  "defused\x00"
0x8049c12:   65 78 70 6c 6f 64 65 64  00                        |exploded.       |  "exploded\x00"
0x8049c1b:   62 6f 6d 62 2d 68 65 61  64 65 72 3a 25 73 3a 25   |bomb-header:%s:%|  "bomb-header:%s:%d:%s:%s:%d\n\x00"
0x8049c2b:   64 3a 25 73 3a 25 73 3a  25 64 0a 00               |d:%s:%s:%d..    |
0x8049c37:   62 6f 6d 62 2d 73 74 72  69 6e 67 3a 25 73 3a 25   |bomb-string:%s:%|  "bomb-string:%s:%d:%s:%d:%s\n\x00"
0x8049c47:   64 3a 25 73 3a 25 64 3a  25 73 0a 00               |d:%s:%d:%s..    |
0x8049c53:   62 6f 6d 62 00                                     |bomb.           |  "bomb\x00"
0x8049c58:   2f 75 73 72 2f 73 62 69  6e 2f 73 65 6e 64 6d 61   |/usr/sbin/sendma|  "/usr/sbin/sendmail -bm\x00"
0x8049c68:   69 6c 20 2d 62 6d 00                               |il -bm.         |
0x8049c6f:   25 73 20 25 73 40 25 73  00                        |%s %s@%s.       |  "%s %s@%s\x00"
0x8049c78:   45 52 52 4f 52 3a 20 6e  6f 74 69 66 69 63 61 74   |ERROR: notificat|  "ERROR: notification error\n\x00"
0x8049c88:   69 6f 6e 20 65 72 72 6f  72 0a 00                  |ion error..     |
0x8049c93:   45 52 52 4f 52 3a 20 66  63 6c 6f 73 65 28 74 6d   |ERROR: fclose(tm|  "ERROR: fclose(tmp) error\n\x00"
0x8049ca3:   70 29 20 65 72 72 6f 72  0a 00                     |p) error..      |
0x8049cad:   45 52 52 4f 52 3a 20 64  75 70 28 74 6d 70 73 74   |ERROR: dup(tmpst|  "ERROR: dup(tmpstdin) error\n\x00"
0x8049cbd:   64 69 6e 29 20 65 72 72  6f 72 0a 00               |din) error..    |
0x8049cc9:   45 52 52 4f 52 3a 20 63  6c 6f 73 65 28 74 6d 70   |ERROR: close(tmp|  "ERROR: close(tmpstdin)\n\x00"
0x8049cd9:   73 74 64 69 6e 29 0a 00                            |stdin)..        |
0x8049ce1:   0a 42 4f 4f 4d 21 21 21  0a 00                     |.BOOM!!!..      |  "\nBOOM!!!\n\x00"
0x8049ceb:   54 68 65 20 62 6f 6d 62  20 68 61 73 20 62 6c 6f   |The bomb has blo|  "The bomb has blown up.\n\x00"
0x8049cfb:   77 6e 20 75 70 2e 0a 00                            |wn up...        |
0x8049d03:   25 64 20 25 73 00                                  |%d %s.          |  "%d %s\x00"
0x8049d09:   61 75 73 74 69 6e 70 6f  77 65 72 73               |austinpowers    |
0x8049d15:   00 00 00 00 00 00 00 00  00 00 00                  |...........     |
0x8049d20:   43 75 72 73 65 73 2c 20  79 6f 75 27 76 65 20 66   |Curses, you've f|  "Curses, you've found the secret phase!\n\x00"
0x8049d30:   6f 75 6e 64 20 74 68 65  20 73 65 63 72 65 74 20   |ound the secret |
0x8049d40:   70 68 61 73 65 21 0a 00                            |phase!..        |
0x8049d48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x8049d58:   00 00 00 00 00 00 00 00                            |........        |
0x8049d60:   42 75 74 20 66 69 6e 64  69 6e 67 20 69 74 20 61   |But finding it a|  "But finding it and solving it are quite different...\n\x00"
0x8049d70:   6e 64 20 73 6f 6c 76 69  6e 67 20 69 74 20 61 72   |nd solving it ar|
0x8049d80:   65 20 71 75 69 74 65 20  64 69 66 66 65 72 65 6e   |e quite differen|
0x8049d90:   74 2e 2e 2e 0a 00                                  |t.....          |
0x8049d96:   00 00 00 00 00 00 00 00  00 00                     |..........      |
0x8049da0:   43 6f 6e 67 72 61 74 75  6c 61 74 69 6f 6e 73 21   |Congratulations!|  "Congratulations! You've defused the bomb!\n\x00"
0x8049db0:   20 59 6f 75 27 76 65 20  64 65 66 75 73 65 64 20   | You've defused |
0x8049dc0:   74 68 65 20 62 6f 6d 62  21 0a 00                  |the bomb!..     |
;  section: .data
0x804ade0:   00 00 00 00                                        |....            |
0x804ade4:   14 b5 04 08                                        |....            |
0x804ade8:   00 00 00 00                                        |....            |
0x804adec:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804adfc:   00 00 00 00                                        |....            |
0x804ae00:   00 00 00 00                                        |....            |
0x804ae04:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae14:   00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x804ae20:   67 65 6e 65 72 69 63 00                            |generic.        |  "generic\x00"
0x804ae28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae38:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae58:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae68:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae78:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae88:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ae98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aea8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aeb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aec8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aed8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aee8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aef8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af08:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af18:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af28:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af38:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af48:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af58:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af68:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af78:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af88:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804af98:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afa8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afb8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afc8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afd8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804afe8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804aff8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b008:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b018:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b028:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b038:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b048:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b058:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b068:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b078:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b088:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b098:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0a8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0c8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0e8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b0f8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b108:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b118:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b128:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b138:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b148:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b158:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b168:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b178:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b188:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b198:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1a8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1c8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1d8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1e8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b1f8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b208:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b218:   00 00 00 00 00 00 00 00                            |........        |
0x804b220:   69 73 72 76 65 61 77 68  6f 62 70 6e 75 74 66 67   |isrveawhobpnutfg|  "isrveawhobpnutfg\xb0\x01\x00"
0x804b230:   b0 01 00                                           |...             |
0x804b233:   00 06 00 00 00 00 00 00  00 d4 00 00 00 05 00 00   |................|
0x804b243:   00 30 b2 04 08 e5 03 00  00 04 00 00 00 3c b2 04   |.0...........<..|
0x804b253:   08 2d 01 00 00 03 00 00  00 48 b2 04 08 d5 02 00   |.-.......H......|
0x804b263:   00 02 00 00 00 54 b2 04  08                        |.....T...       |
0x804b26c:   fd 00 00 00                                        |....            |
0x804b270:   01 00 00 00 60 b2 04 08  e9 03 00 00 00 00 00 00   |....`...........|
0x804b280:   00 00 00 00 2f 00 00 00  00 00 00 00 00 00 00 00   |..../...........|
0x804b290:   14 00 00 00 00 00 00 00  00 00 00 00 07 00 00 00   |................|
0x804b2a0:   00 00 00 00 00 00 00 00  23 00 00 00 00 00 00 00   |........#.......|
0x804b2b0:   00 00 00 00 63 00 00 00  00 00 00 00 00 00 00 00   |....c...........|
0x804b2c0:   01 00 00 00 00 00 00 00  00 00 00 00 28 00 00 00   |............(...|
0x804b2d0:   00 00 00 00 00 00 00 00  6b 00 00 00 b4 b2 04 08   |........k.......|
0x804b2e0:   78 b2 04 08 06 00 00 00  c0 b2 04 08 9c b2 04 08   |x...............|
0x804b2f0:   2d 00 00 00 cc b2 04 08  84 b2 04 08 16 00 00 00   |-...............|
0x804b300:   90 b2 04 08 a8 b2 04 08  32 00 00 00 f0 b2 04 08   |........2.......|
0x804b310:   d8 b2 04 08 08 00 00 00  e4 b2 04 08 fc b2 04 08   |................|
0x804b320:   24 00 00 00                                        |$...            |
0x804b324:   14 b3 04 08 08 b3 04 08  00 00 00 00 00 00 00 00   |................|
0x804b334:   00 00 00 00 00 00 00 00  00 00 00 00 9a 9a 04 08   |................|
0x804b344:   81 9a 04 08 6c 9a 04 08  57 9a 04 08 41 9a 04 08   |....l...W...A...|
0x804b354:   2c 9a 04 08 13 9a 04 08  fb 99 04 08 e4 99 04 08   |,...............|
0x804b364:   cd 99 04 08 b2 99 04 08  9c 99 04 08 83 99 04 08   |................|
0x804b374:   6e 99 04 08 52 99 04 08  3b 99 04 08 24 99 04 08   |n...R...;...$...|
0x804b384:   0f 99 04 08 f4 98 04 08  dc 98 04 08 c4 98 04 08   |................|
0x804b394:   ab 98 04 08 93 98 04 08  7a 98 04 08 60 98 04 08   |........z...`...|
0x804b3a4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b3b4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b3c4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b3d4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b3e4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b3f4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b404:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b414:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b424:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b434:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b444:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b454:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b464:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804b474:   00 00 00 00 00 00 00 00  00 00 00 00               |............    |
0x804b480:   00 00 00 00                                        |....            |
;  section: .eh_frame
0x804b484:   10 00 00 00                                        |....            |
0x804b488:   00 00 00 00 01 00 01 7c  08 0c 04 04 88 01 00 00   |.......|........|
0x804b498:   68 00 00 00 18 00 00 00  b0 89 04 08 6d 01 00 00   |h...........m...|
0x804b4a8:   41 0e 08 85 02 42 0d 05  44 83 08 6a 2e 10 02 4f   |A....B..D..j...O|
0x804b4b8:   2e 00 4d 2e 10 55 2e 00  49 2e 10 45 2e 00 4d 2e   |..M..U..I..E..M.|
0x804b4c8:   10 48 2e 00 49 2e 10 45  2e 00 4d 2e 10 48 2e 00   |.H..I..E..M..H..|
0x804b4d8:   49 2e 10 45 2e 00 4d 2e  10 48 2e 00 49 2e 10 45   |I..E..M..H..I..E|
0x804b4e8:   2e 00 4d 2e 10 48 2e 00  49 2e 10 45 2e 00 4d 2e   |..M..H..I..E..M.|
0x804b4f8:   10 48 2e 00 49 2e 10 45  2e 00 00 00               |.H..I..E....    |
0x804b504:   00 00 00 00                                        |....            |
;  section: .ctors
0x804b508:   ff ff ff ff                                        |....            |
0x804b50c:   00 00 00 00                                        |....            |
;  section: .dtors
0x804b510:   ff ff ff ff                                        |....            |
0x804b514:   00 00 00 00                                        |....            |
;  section: .got
0x804b518:   98 b5 04 08                                        |....            |
0x804b51c:   00 00 00 00 00 00 00 00  26 87 04 08 36 87 04 08   |........&...6...|
0x804b52c:   46 87 04 08 56 87 04 08  66 87 04 08 76 87 04 08   |F...V...f...v...|
0x804b53c:   86 87 04 08 96 87 04 08  a6 87 04 08 b6 87 04 08   |................|
0x804b54c:   c6 87 04 08 d6 87 04 08  e6 87 04 08 f6 87 04 08   |................|
0x804b55c:   06 88 04 08 16 88 04 08  26 88 04 08 36 88 04 08   |........&...6...|
0x804b56c:   46 88 04 08 56 88 04 08  66 88 04 08 76 88 04 08   |F...V...f...v...|
0x804b57c:   86 88 04 08 96 88 04 08  a6 88 04 08 b6 88 04 08   |................|
0x804b58c:   c6 88 04 08 d6 88 04 08  00 00 00 00               |............    |
;  section: .dynamic
0x804b598:   01 00 00 00 10 00 00 00  0c 00 00 00 e0 86 04 08   |................|
0x804b5a8:   0d 00 00 00 e4 95 04 08  04 00 00 00 28 81 04 08   |............(...|
0x804b5b8:   05 00 00 00 1c 84 04 08  06 00 00 00 fc 81 04 08   |................|
0x804b5c8:   0a 00 00 00 3b 01 00 00  0b 00 00 00 10 00 00 00   |....;...........|
0x804b5d8:   15 00 00 00 00 00 00 00  03 00 00 00 18 b5 04 08   |................|
0x804b5e8:   02 00 00 00 e0 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804b5f8:   17 00 00 00 00 86 04 08  11 00 00 00 e0 85 04 08   |................|
0x804b608:   12 00 00 00 20 00 00 00  13 00 00 00 08 00 00 00   |.... ...........|
0x804b618:   fe ff ff 6f b0 85 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804b628:   f0 ff ff 6f 6c 85 04 08  00 00 00 00 00 00 00 00   |...ol...........|
